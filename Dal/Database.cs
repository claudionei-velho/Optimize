

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Dal\App.config"
//     Connection String Name: "OptiContext"
//     Connection String:      "Data Source=sistema\SQLEXPRESS;Initial Catalog=Optimize;Persist Security Info=True;User ID=sa;password=**zapped**;;MultipleActiveResultSets=True"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Express Edition (64-bit)
// Database Engine Edition : Express
// Database Version        : 14.0.1000.169

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Dal
{
    using System.Linq;

    #region Unit of work

    public interface IMyDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Cidade> Cidades { get; set; } // Cidades
        System.Data.Entity.DbSet<ClassLinha> ClassLinhas { get; set; } // ClassLinhas
        System.Data.Entity.DbSet<Dominio> Dominios { get; set; } // Dominios
        System.Data.Entity.DbSet<Empresa> Empresas { get; set; } // Empresas
        System.Data.Entity.DbSet<EUsuario> EUsuarios { get; set; } // EUsuarios
        System.Data.Entity.DbSet<FInstalaco> FInstalacoes { get; set; } // FInstalacoes
        System.Data.Entity.DbSet<ISinotico> ISinoticoes { get; set; } // ISinotico
        System.Data.Entity.DbSet<Municipio> Municipios { get; set; } // Municipios
        System.Data.Entity.DbSet<opc_AAbastece> opc_AAbasteces { get; set; } // AAbastece
        System.Data.Entity.DbSet<opc_AAdmin> opc_AAdmins { get; set; } // AAdmin
        System.Data.Entity.DbSet<opc_AAlmox> opc_AAlmoxes { get; set; } // AAlmox
        System.Data.Entity.DbSet<opc_AEstaciona> opc_AEstacionas { get; set; } // AEstaciona
        System.Data.Entity.DbSet<opc_AFunilaria> opc_AFunilarias { get; set; } // AFunilaria
        System.Data.Entity.DbSet<opc_AGaragem> opc_AGaragems { get; set; } // AGaragem
        System.Data.Entity.DbSet<opc_AInspecao> opc_AInspecaos { get; set; } // AInspecao
        System.Data.Entity.DbSet<opc_ALavacao> opc_ALavacaos { get; set; } // ALavacao
        System.Data.Entity.DbSet<opc_ALubrifica> opc_ALubrificas { get; set; } // ALubrifica
        System.Data.Entity.DbSet<opc_AMantem> opc_AMantems { get; set; } // AMantem
        System.Data.Entity.DbSet<opc_Atendimento> opc_Atendimentoes { get; set; } // Atendimentos
        System.Data.Entity.DbSet<opc_ATrafego> opc_ATrafegoes { get; set; } // ATrafego
        System.Data.Entity.DbSet<opc_Carroceria> opc_Carrocerias { get; set; } // Carrocerias
        System.Data.Entity.DbSet<opc_Chassis> opc_Chassis { get; set; } // Chassis
        System.Data.Entity.DbSet<opc_CLinha> opc_CLinhas { get; set; } // CLinhas
        System.Data.Entity.DbSet<opc_Corredore> opc_Corredores { get; set; } // Corredores
        System.Data.Entity.DbSet<opc_Custo> opc_Custoes { get; set; } // Custos
        System.Data.Entity.DbSet<opc_CustoMod> opc_CustoMods { get; set; } // CustoMod
        System.Data.Entity.DbSet<opc_CVeiculo> opc_CVeiculoes { get; set; } // CVeiculos
        System.Data.Entity.DbSet<opc_CVeiculosAtt> opc_CVeiculosAtts { get; set; } // CVeiculosAtt
        System.Data.Entity.DbSet<opc_Dimensionar> opc_Dimensionars { get; set; } // Dimensionar
        System.Data.Entity.DbSet<opc_EDominio> opc_EDominios { get; set; } // EDominios
        System.Data.Entity.DbSet<opc_EInstalaco> opc_EInstalacoes { get; set; } // EInstalacoes
        System.Data.Entity.DbSet<opc_EPeriodo> opc_EPeriodoes { get; set; } // EPeriodos
        System.Data.Entity.DbSet<opc_FAjuste> opc_FAjustes { get; set; } // FAjuste
        System.Data.Entity.DbSet<opc_FViagen> opc_FViagens { get; set; } // FViagens
        System.Data.Entity.DbSet<opc_Horario> opc_Horarios { get; set; } // Horarios
        System.Data.Entity.DbSet<opc_Instalaco> opc_Instalacoes { get; set; } // Instalacoes
        System.Data.Entity.DbSet<opc_ItAtendimento> opc_ItAtendimentoes { get; set; } // ItAtendimentos
        System.Data.Entity.DbSet<opc_Itinerario> opc_Itinerarios { get; set; } // Itinerarios
        System.Data.Entity.DbSet<opc_ItTronco> opc_ItTroncoes { get; set; } // ItTroncos
        System.Data.Entity.DbSet<opc_Linha> opc_Linhas { get; set; } // Linhas
        System.Data.Entity.DbSet<opc_LnCorredore> opc_LnCorredores { get; set; } // LnCorredores
        System.Data.Entity.DbSet<opc_LnPesquisa> opc_LnPesquisas { get; set; } // LnPesquisas
        System.Data.Entity.DbSet<opc_LnTerminai> opc_LnTerminais { get; set; } // LnTerminais
        System.Data.Entity.DbSet<opc_LnTronco> opc_LnTroncoes { get; set; } // LnTroncos
        System.Data.Entity.DbSet<opc_Lotaco> opc_Lotacoes { get; set; } // Lotacoes
        System.Data.Entity.DbSet<opc_Motore> opc_Motores { get; set; } // Motores
        System.Data.Entity.DbSet<opc_Ocupaco> opc_Ocupacoes { get; set; } // Ocupacoes
        System.Data.Entity.DbSet<opc_Oferta> opc_Ofertas { get; set; } // Ofertas
        System.Data.Entity.DbSet<opc_Operaco> opc_Operacoes { get; set; } // Operacoes
        System.Data.Entity.DbSet<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas
        System.Data.Entity.DbSet<opc_Ponto> opc_Pontoes { get; set; } // Pontos
        System.Data.Entity.DbSet<opc_PontosRepetido> opc_PontosRepetidoes { get; set; } // pontos_repetidos
        System.Data.Entity.DbSet<opc_PrLinha> opc_PrLinhas { get; set; } // PrLinhas
        System.Data.Entity.DbSet<opc_PtAtendimento> opc_PtAtendimentoes { get; set; } // PtAtendimentos
        System.Data.Entity.DbSet<opc_PtDestino> opc_PtDestinoes { get; set; } // PtDestino
        System.Data.Entity.DbSet<opc_PTipico> opc_PTipicoes { get; set; } // PTipicos
        System.Data.Entity.DbSet<opc_PtLinha> opc_PtLinhas { get; set; } // PtLinhas
        System.Data.Entity.DbSet<opc_PtOrigem> opc_PtOrigems { get; set; } // PtOrigem
        System.Data.Entity.DbSet<opc_PtTronco> opc_PtTroncoes { get; set; } // PtTroncos
        System.Data.Entity.DbSet<opc_Renovacao> opc_Renovacaos { get; set; } // Renovacao
        System.Data.Entity.DbSet<opc_Sinotico> opc_Sinoticoes { get; set; } // Sinotico
        System.Data.Entity.DbSet<opc_Tarifa> opc_Tarifas { get; set; } // Tarifas
        System.Data.Entity.DbSet<opc_TarifaMod> opc_TarifaMods { get; set; } // TarifaMod
        System.Data.Entity.DbSet<opc_TCategoria> opc_TCategorias { get; set; } // TCategorias
        System.Data.Entity.DbSet<opc_Terminai> opc_Terminais { get; set; } // Terminais
        System.Data.Entity.DbSet<opc_TotalViagen> opc_TotalViagens { get; set; } // TotalViagens
        System.Data.Entity.DbSet<opc_Tronco> opc_Troncoes { get; set; } // Troncos
        System.Data.Entity.DbSet<opc_TServico> opc_TServicoes { get; set; } // TServicos
        System.Data.Entity.DbSet<opc_Veiculo> opc_Veiculoes { get; set; } // Veiculos
        System.Data.Entity.DbSet<opc_VeiculosAtt> opc_VeiculosAtts { get; set; } // VeiculosAtt
        System.Data.Entity.DbSet<opc_Via> opc_Vias { get; set; } // Vias
        System.Data.Entity.DbSet<opc_Viagen> opc_Viagens { get; set; } // Viagens
        System.Data.Entity.DbSet<OperLinha> OperLinhas { get; set; } // OperLinhas
        System.Data.Entity.DbSet<Pais> Pais { get; set; } // Paises
        System.Data.Entity.DbSet<Periodo> Periodoes { get; set; } // Periodos
        System.Data.Entity.DbSet<temp_VisPonto> temp_VisPontoes { get; set; } // vis_pontos
        System.Data.Entity.DbSet<Uf> Ufs { get; set; } // Ufs
        System.Data.Entity.DbSet<Usuario> Usuarios { get; set; } // Usuarios

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        int temp_AddPontosVisate();
        // temp_AddPontosVisateAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int temp_UpdatePontosVisate();
        // temp_UpdatePontosVisateAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class MyDbContext : System.Data.Entity.DbContext, IMyDbContext
    {
        public System.Data.Entity.DbSet<Cidade> Cidades { get; set; } // Cidades
        public System.Data.Entity.DbSet<ClassLinha> ClassLinhas { get; set; } // ClassLinhas
        public System.Data.Entity.DbSet<Dominio> Dominios { get; set; } // Dominios
        public System.Data.Entity.DbSet<Empresa> Empresas { get; set; } // Empresas
        public System.Data.Entity.DbSet<EUsuario> EUsuarios { get; set; } // EUsuarios
        public System.Data.Entity.DbSet<FInstalaco> FInstalacoes { get; set; } // FInstalacoes
        public System.Data.Entity.DbSet<ISinotico> ISinoticoes { get; set; } // ISinotico
        public System.Data.Entity.DbSet<Municipio> Municipios { get; set; } // Municipios
        public System.Data.Entity.DbSet<opc_AAbastece> opc_AAbasteces { get; set; } // AAbastece
        public System.Data.Entity.DbSet<opc_AAdmin> opc_AAdmins { get; set; } // AAdmin
        public System.Data.Entity.DbSet<opc_AAlmox> opc_AAlmoxes { get; set; } // AAlmox
        public System.Data.Entity.DbSet<opc_AEstaciona> opc_AEstacionas { get; set; } // AEstaciona
        public System.Data.Entity.DbSet<opc_AFunilaria> opc_AFunilarias { get; set; } // AFunilaria
        public System.Data.Entity.DbSet<opc_AGaragem> opc_AGaragems { get; set; } // AGaragem
        public System.Data.Entity.DbSet<opc_AInspecao> opc_AInspecaos { get; set; } // AInspecao
        public System.Data.Entity.DbSet<opc_ALavacao> opc_ALavacaos { get; set; } // ALavacao
        public System.Data.Entity.DbSet<opc_ALubrifica> opc_ALubrificas { get; set; } // ALubrifica
        public System.Data.Entity.DbSet<opc_AMantem> opc_AMantems { get; set; } // AMantem
        public System.Data.Entity.DbSet<opc_Atendimento> opc_Atendimentoes { get; set; } // Atendimentos
        public System.Data.Entity.DbSet<opc_ATrafego> opc_ATrafegoes { get; set; } // ATrafego
        public System.Data.Entity.DbSet<opc_Carroceria> opc_Carrocerias { get; set; } // Carrocerias
        public System.Data.Entity.DbSet<opc_Chassis> opc_Chassis { get; set; } // Chassis
        public System.Data.Entity.DbSet<opc_CLinha> opc_CLinhas { get; set; } // CLinhas
        public System.Data.Entity.DbSet<opc_Corredore> opc_Corredores { get; set; } // Corredores
        public System.Data.Entity.DbSet<opc_Custo> opc_Custoes { get; set; } // Custos
        public System.Data.Entity.DbSet<opc_CustoMod> opc_CustoMods { get; set; } // CustoMod
        public System.Data.Entity.DbSet<opc_CVeiculo> opc_CVeiculoes { get; set; } // CVeiculos
        public System.Data.Entity.DbSet<opc_CVeiculosAtt> opc_CVeiculosAtts { get; set; } // CVeiculosAtt
        public System.Data.Entity.DbSet<opc_Dimensionar> opc_Dimensionars { get; set; } // Dimensionar
        public System.Data.Entity.DbSet<opc_EDominio> opc_EDominios { get; set; } // EDominios
        public System.Data.Entity.DbSet<opc_EInstalaco> opc_EInstalacoes { get; set; } // EInstalacoes
        public System.Data.Entity.DbSet<opc_EPeriodo> opc_EPeriodoes { get; set; } // EPeriodos
        public System.Data.Entity.DbSet<opc_FAjuste> opc_FAjustes { get; set; } // FAjuste
        public System.Data.Entity.DbSet<opc_FViagen> opc_FViagens { get; set; } // FViagens
        public System.Data.Entity.DbSet<opc_Horario> opc_Horarios { get; set; } // Horarios
        public System.Data.Entity.DbSet<opc_Instalaco> opc_Instalacoes { get; set; } // Instalacoes
        public System.Data.Entity.DbSet<opc_ItAtendimento> opc_ItAtendimentoes { get; set; } // ItAtendimentos
        public System.Data.Entity.DbSet<opc_Itinerario> opc_Itinerarios { get; set; } // Itinerarios
        public System.Data.Entity.DbSet<opc_ItTronco> opc_ItTroncoes { get; set; } // ItTroncos
        public System.Data.Entity.DbSet<opc_Linha> opc_Linhas { get; set; } // Linhas
        public System.Data.Entity.DbSet<opc_LnCorredore> opc_LnCorredores { get; set; } // LnCorredores
        public System.Data.Entity.DbSet<opc_LnPesquisa> opc_LnPesquisas { get; set; } // LnPesquisas
        public System.Data.Entity.DbSet<opc_LnTerminai> opc_LnTerminais { get; set; } // LnTerminais
        public System.Data.Entity.DbSet<opc_LnTronco> opc_LnTroncoes { get; set; } // LnTroncos
        public System.Data.Entity.DbSet<opc_Lotaco> opc_Lotacoes { get; set; } // Lotacoes
        public System.Data.Entity.DbSet<opc_Motore> opc_Motores { get; set; } // Motores
        public System.Data.Entity.DbSet<opc_Ocupaco> opc_Ocupacoes { get; set; } // Ocupacoes
        public System.Data.Entity.DbSet<opc_Oferta> opc_Ofertas { get; set; } // Ofertas
        public System.Data.Entity.DbSet<opc_Operaco> opc_Operacoes { get; set; } // Operacoes
        public System.Data.Entity.DbSet<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas
        public System.Data.Entity.DbSet<opc_Ponto> opc_Pontoes { get; set; } // Pontos
        public System.Data.Entity.DbSet<opc_PontosRepetido> opc_PontosRepetidoes { get; set; } // pontos_repetidos
        public System.Data.Entity.DbSet<opc_PrLinha> opc_PrLinhas { get; set; } // PrLinhas
        public System.Data.Entity.DbSet<opc_PtAtendimento> opc_PtAtendimentoes { get; set; } // PtAtendimentos
        public System.Data.Entity.DbSet<opc_PtDestino> opc_PtDestinoes { get; set; } // PtDestino
        public System.Data.Entity.DbSet<opc_PTipico> opc_PTipicoes { get; set; } // PTipicos
        public System.Data.Entity.DbSet<opc_PtLinha> opc_PtLinhas { get; set; } // PtLinhas
        public System.Data.Entity.DbSet<opc_PtOrigem> opc_PtOrigems { get; set; } // PtOrigem
        public System.Data.Entity.DbSet<opc_PtTronco> opc_PtTroncoes { get; set; } // PtTroncos
        public System.Data.Entity.DbSet<opc_Renovacao> opc_Renovacaos { get; set; } // Renovacao
        public System.Data.Entity.DbSet<opc_Sinotico> opc_Sinoticoes { get; set; } // Sinotico
        public System.Data.Entity.DbSet<opc_Tarifa> opc_Tarifas { get; set; } // Tarifas
        public System.Data.Entity.DbSet<opc_TarifaMod> opc_TarifaMods { get; set; } // TarifaMod
        public System.Data.Entity.DbSet<opc_TCategoria> opc_TCategorias { get; set; } // TCategorias
        public System.Data.Entity.DbSet<opc_Terminai> opc_Terminais { get; set; } // Terminais
        public System.Data.Entity.DbSet<opc_TotalViagen> opc_TotalViagens { get; set; } // TotalViagens
        public System.Data.Entity.DbSet<opc_Tronco> opc_Troncoes { get; set; } // Troncos
        public System.Data.Entity.DbSet<opc_TServico> opc_TServicoes { get; set; } // TServicos
        public System.Data.Entity.DbSet<opc_Veiculo> opc_Veiculoes { get; set; } // Veiculos
        public System.Data.Entity.DbSet<opc_VeiculosAtt> opc_VeiculosAtts { get; set; } // VeiculosAtt
        public System.Data.Entity.DbSet<opc_Via> opc_Vias { get; set; } // Vias
        public System.Data.Entity.DbSet<opc_Viagen> opc_Viagens { get; set; } // Viagens
        public System.Data.Entity.DbSet<OperLinha> OperLinhas { get; set; } // OperLinhas
        public System.Data.Entity.DbSet<Pais> Pais { get; set; } // Paises
        public System.Data.Entity.DbSet<Periodo> Periodoes { get; set; } // Periodos
        public System.Data.Entity.DbSet<temp_VisPonto> temp_VisPontoes { get; set; } // vis_pontos
        public System.Data.Entity.DbSet<Uf> Ufs { get; set; } // Ufs
        public System.Data.Entity.DbSet<Usuario> Usuarios { get; set; } // Usuarios

        static MyDbContext()
        {
            System.Data.Entity.Database.SetInitializer<MyDbContext>(null);
        }

        public MyDbContext()
            : base("Name=OptiContext")
        {
        }

        public MyDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public MyDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        public MyDbContext(System.Data.Entity.Core.Objects.ObjectContext objectContext, bool dbContextOwnsObjectContext)
            : base(objectContext, dbContextOwnsObjectContext)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new CidadeConfiguration());
            modelBuilder.Configurations.Add(new ClassLinhaConfiguration());
            modelBuilder.Configurations.Add(new DominioConfiguration());
            modelBuilder.Configurations.Add(new EmpresaConfiguration());
            modelBuilder.Configurations.Add(new EUsuarioConfiguration());
            modelBuilder.Configurations.Add(new FInstalacoConfiguration());
            modelBuilder.Configurations.Add(new ISinoticoConfiguration());
            modelBuilder.Configurations.Add(new MunicipioConfiguration());
            modelBuilder.Configurations.Add(new opc_AAbasteceConfiguration());
            modelBuilder.Configurations.Add(new opc_AAdminConfiguration());
            modelBuilder.Configurations.Add(new opc_AAlmoxConfiguration());
            modelBuilder.Configurations.Add(new opc_AEstacionaConfiguration());
            modelBuilder.Configurations.Add(new opc_AFunilariaConfiguration());
            modelBuilder.Configurations.Add(new opc_AGaragemConfiguration());
            modelBuilder.Configurations.Add(new opc_AInspecaoConfiguration());
            modelBuilder.Configurations.Add(new opc_ALavacaoConfiguration());
            modelBuilder.Configurations.Add(new opc_ALubrificaConfiguration());
            modelBuilder.Configurations.Add(new opc_AMantemConfiguration());
            modelBuilder.Configurations.Add(new opc_AtendimentoConfiguration());
            modelBuilder.Configurations.Add(new opc_ATrafegoConfiguration());
            modelBuilder.Configurations.Add(new opc_CarroceriaConfiguration());
            modelBuilder.Configurations.Add(new opc_ChassisConfiguration());
            modelBuilder.Configurations.Add(new opc_CLinhaConfiguration());
            modelBuilder.Configurations.Add(new opc_CorredoreConfiguration());
            modelBuilder.Configurations.Add(new opc_CustoConfiguration());
            modelBuilder.Configurations.Add(new opc_CustoModConfiguration());
            modelBuilder.Configurations.Add(new opc_CVeiculoConfiguration());
            modelBuilder.Configurations.Add(new opc_CVeiculosAttConfiguration());
            modelBuilder.Configurations.Add(new opc_DimensionarConfiguration());
            modelBuilder.Configurations.Add(new opc_EDominioConfiguration());
            modelBuilder.Configurations.Add(new opc_EInstalacoConfiguration());
            modelBuilder.Configurations.Add(new opc_EPeriodoConfiguration());
            modelBuilder.Configurations.Add(new opc_FAjusteConfiguration());
            modelBuilder.Configurations.Add(new opc_FViagenConfiguration());
            modelBuilder.Configurations.Add(new opc_HorarioConfiguration());
            modelBuilder.Configurations.Add(new opc_InstalacoConfiguration());
            modelBuilder.Configurations.Add(new opc_ItAtendimentoConfiguration());
            modelBuilder.Configurations.Add(new opc_ItinerarioConfiguration());
            modelBuilder.Configurations.Add(new opc_ItTroncoConfiguration());
            modelBuilder.Configurations.Add(new opc_LinhaConfiguration());
            modelBuilder.Configurations.Add(new opc_LnCorredoreConfiguration());
            modelBuilder.Configurations.Add(new opc_LnPesquisaConfiguration());
            modelBuilder.Configurations.Add(new opc_LnTerminaiConfiguration());
            modelBuilder.Configurations.Add(new opc_LnTroncoConfiguration());
            modelBuilder.Configurations.Add(new opc_LotacoConfiguration());
            modelBuilder.Configurations.Add(new opc_MotoreConfiguration());
            modelBuilder.Configurations.Add(new opc_OcupacoConfiguration());
            modelBuilder.Configurations.Add(new opc_OfertaConfiguration());
            modelBuilder.Configurations.Add(new opc_OperacoConfiguration());
            modelBuilder.Configurations.Add(new opc_PesquisaConfiguration());
            modelBuilder.Configurations.Add(new opc_PontoConfiguration());
            modelBuilder.Configurations.Add(new opc_PontosRepetidoConfiguration());
            modelBuilder.Configurations.Add(new opc_PrLinhaConfiguration());
            modelBuilder.Configurations.Add(new opc_PtAtendimentoConfiguration());
            modelBuilder.Configurations.Add(new opc_PtDestinoConfiguration());
            modelBuilder.Configurations.Add(new opc_PTipicoConfiguration());
            modelBuilder.Configurations.Add(new opc_PtLinhaConfiguration());
            modelBuilder.Configurations.Add(new opc_PtOrigemConfiguration());
            modelBuilder.Configurations.Add(new opc_PtTroncoConfiguration());
            modelBuilder.Configurations.Add(new opc_RenovacaoConfiguration());
            modelBuilder.Configurations.Add(new opc_SinoticoConfiguration());
            modelBuilder.Configurations.Add(new opc_TarifaConfiguration());
            modelBuilder.Configurations.Add(new opc_TarifaModConfiguration());
            modelBuilder.Configurations.Add(new opc_TCategoriaConfiguration());
            modelBuilder.Configurations.Add(new opc_TerminaiConfiguration());
            modelBuilder.Configurations.Add(new opc_TotalViagenConfiguration());
            modelBuilder.Configurations.Add(new opc_TroncoConfiguration());
            modelBuilder.Configurations.Add(new opc_TServicoConfiguration());
            modelBuilder.Configurations.Add(new opc_VeiculoConfiguration());
            modelBuilder.Configurations.Add(new opc_VeiculosAttConfiguration());
            modelBuilder.Configurations.Add(new opc_ViaConfiguration());
            modelBuilder.Configurations.Add(new opc_ViagenConfiguration());
            modelBuilder.Configurations.Add(new OperLinhaConfiguration());
            modelBuilder.Configurations.Add(new PaisConfiguration());
            modelBuilder.Configurations.Add(new PeriodoConfiguration());
            modelBuilder.Configurations.Add(new temp_VisPontoConfiguration());
            modelBuilder.Configurations.Add(new UfConfiguration());
            modelBuilder.Configurations.Add(new UsuarioConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new CidadeConfiguration(schema));
            modelBuilder.Configurations.Add(new ClassLinhaConfiguration(schema));
            modelBuilder.Configurations.Add(new DominioConfiguration(schema));
            modelBuilder.Configurations.Add(new EmpresaConfiguration(schema));
            modelBuilder.Configurations.Add(new EUsuarioConfiguration(schema));
            modelBuilder.Configurations.Add(new FInstalacoConfiguration(schema));
            modelBuilder.Configurations.Add(new ISinoticoConfiguration(schema));
            modelBuilder.Configurations.Add(new MunicipioConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AAbasteceConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AAdminConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AAlmoxConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AEstacionaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AFunilariaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AGaragemConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AInspecaoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ALavacaoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ALubrificaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AMantemConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_AtendimentoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ATrafegoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_CarroceriaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ChassisConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_CLinhaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_CorredoreConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_CustoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_CustoModConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_CVeiculoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_CVeiculosAttConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_DimensionarConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_EDominioConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_EInstalacoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_EPeriodoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_FAjusteConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_FViagenConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_HorarioConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_InstalacoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ItAtendimentoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ItinerarioConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ItTroncoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_LinhaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_LnCorredoreConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_LnPesquisaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_LnTerminaiConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_LnTroncoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_LotacoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_MotoreConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_OcupacoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_OfertaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_OperacoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PesquisaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PontoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PontosRepetidoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PrLinhaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PtAtendimentoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PtDestinoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PTipicoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PtLinhaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PtOrigemConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_PtTroncoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_RenovacaoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_SinoticoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_TarifaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_TarifaModConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_TCategoriaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_TerminaiConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_TotalViagenConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_TroncoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_TServicoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_VeiculoConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_VeiculosAttConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ViaConfiguration(schema));
            modelBuilder.Configurations.Add(new opc_ViagenConfiguration(schema));
            modelBuilder.Configurations.Add(new OperLinhaConfiguration(schema));
            modelBuilder.Configurations.Add(new PaisConfiguration(schema));
            modelBuilder.Configurations.Add(new PeriodoConfiguration(schema));
            modelBuilder.Configurations.Add(new temp_VisPontoConfiguration(schema));
            modelBuilder.Configurations.Add(new UfConfiguration(schema));
            modelBuilder.Configurations.Add(new UsuarioConfiguration(schema));
            return modelBuilder;
        }

        // Stored Procedures
        public int temp_AddPontosVisate()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [temp].[add_pontos_visate] ", procResultParam);

            return (int) procResultParam.Value;
        }

        public int temp_UpdatePontosVisate()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };

            Database.ExecuteSqlCommand(System.Data.Entity.TransactionalBehavior.DoNotEnsureTransaction, "EXEC @procResult = [temp].[update_pontos_visate] ", procResultParam);

            return (int) procResultParam.Value;
        }

    }
    #endregion

    #region Database context factory

    public class MyDbContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<MyDbContext>
    {
        public MyDbContext Create()
        {
            return new MyDbContext();
        }
    }

    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class FakeMyDbContext : IMyDbContext
    {
        public System.Data.Entity.DbSet<Cidade> Cidades { get; set; }
        public System.Data.Entity.DbSet<ClassLinha> ClassLinhas { get; set; }
        public System.Data.Entity.DbSet<Dominio> Dominios { get; set; }
        public System.Data.Entity.DbSet<Empresa> Empresas { get; set; }
        public System.Data.Entity.DbSet<EUsuario> EUsuarios { get; set; }
        public System.Data.Entity.DbSet<FInstalaco> FInstalacoes { get; set; }
        public System.Data.Entity.DbSet<ISinotico> ISinoticoes { get; set; }
        public System.Data.Entity.DbSet<Municipio> Municipios { get; set; }
        public System.Data.Entity.DbSet<opc_AAbastece> opc_AAbasteces { get; set; }
        public System.Data.Entity.DbSet<opc_AAdmin> opc_AAdmins { get; set; }
        public System.Data.Entity.DbSet<opc_AAlmox> opc_AAlmoxes { get; set; }
        public System.Data.Entity.DbSet<opc_AEstaciona> opc_AEstacionas { get; set; }
        public System.Data.Entity.DbSet<opc_AFunilaria> opc_AFunilarias { get; set; }
        public System.Data.Entity.DbSet<opc_AGaragem> opc_AGaragems { get; set; }
        public System.Data.Entity.DbSet<opc_AInspecao> opc_AInspecaos { get; set; }
        public System.Data.Entity.DbSet<opc_ALavacao> opc_ALavacaos { get; set; }
        public System.Data.Entity.DbSet<opc_ALubrifica> opc_ALubrificas { get; set; }
        public System.Data.Entity.DbSet<opc_AMantem> opc_AMantems { get; set; }
        public System.Data.Entity.DbSet<opc_Atendimento> opc_Atendimentoes { get; set; }
        public System.Data.Entity.DbSet<opc_ATrafego> opc_ATrafegoes { get; set; }
        public System.Data.Entity.DbSet<opc_Carroceria> opc_Carrocerias { get; set; }
        public System.Data.Entity.DbSet<opc_Chassis> opc_Chassis { get; set; }
        public System.Data.Entity.DbSet<opc_CLinha> opc_CLinhas { get; set; }
        public System.Data.Entity.DbSet<opc_Corredore> opc_Corredores { get; set; }
        public System.Data.Entity.DbSet<opc_Custo> opc_Custoes { get; set; }
        public System.Data.Entity.DbSet<opc_CustoMod> opc_CustoMods { get; set; }
        public System.Data.Entity.DbSet<opc_CVeiculo> opc_CVeiculoes { get; set; }
        public System.Data.Entity.DbSet<opc_CVeiculosAtt> opc_CVeiculosAtts { get; set; }
        public System.Data.Entity.DbSet<opc_Dimensionar> opc_Dimensionars { get; set; }
        public System.Data.Entity.DbSet<opc_EDominio> opc_EDominios { get; set; }
        public System.Data.Entity.DbSet<opc_EInstalaco> opc_EInstalacoes { get; set; }
        public System.Data.Entity.DbSet<opc_EPeriodo> opc_EPeriodoes { get; set; }
        public System.Data.Entity.DbSet<opc_FAjuste> opc_FAjustes { get; set; }
        public System.Data.Entity.DbSet<opc_FViagen> opc_FViagens { get; set; }
        public System.Data.Entity.DbSet<opc_Horario> opc_Horarios { get; set; }
        public System.Data.Entity.DbSet<opc_Instalaco> opc_Instalacoes { get; set; }
        public System.Data.Entity.DbSet<opc_ItAtendimento> opc_ItAtendimentoes { get; set; }
        public System.Data.Entity.DbSet<opc_Itinerario> opc_Itinerarios { get; set; }
        public System.Data.Entity.DbSet<opc_ItTronco> opc_ItTroncoes { get; set; }
        public System.Data.Entity.DbSet<opc_Linha> opc_Linhas { get; set; }
        public System.Data.Entity.DbSet<opc_LnCorredore> opc_LnCorredores { get; set; }
        public System.Data.Entity.DbSet<opc_LnPesquisa> opc_LnPesquisas { get; set; }
        public System.Data.Entity.DbSet<opc_LnTerminai> opc_LnTerminais { get; set; }
        public System.Data.Entity.DbSet<opc_LnTronco> opc_LnTroncoes { get; set; }
        public System.Data.Entity.DbSet<opc_Lotaco> opc_Lotacoes { get; set; }
        public System.Data.Entity.DbSet<opc_Motore> opc_Motores { get; set; }
        public System.Data.Entity.DbSet<opc_Ocupaco> opc_Ocupacoes { get; set; }
        public System.Data.Entity.DbSet<opc_Oferta> opc_Ofertas { get; set; }
        public System.Data.Entity.DbSet<opc_Operaco> opc_Operacoes { get; set; }
        public System.Data.Entity.DbSet<opc_Pesquisa> opc_Pesquisas { get; set; }
        public System.Data.Entity.DbSet<opc_Ponto> opc_Pontoes { get; set; }
        public System.Data.Entity.DbSet<opc_PontosRepetido> opc_PontosRepetidoes { get; set; }
        public System.Data.Entity.DbSet<opc_PrLinha> opc_PrLinhas { get; set; }
        public System.Data.Entity.DbSet<opc_PtAtendimento> opc_PtAtendimentoes { get; set; }
        public System.Data.Entity.DbSet<opc_PtDestino> opc_PtDestinoes { get; set; }
        public System.Data.Entity.DbSet<opc_PTipico> opc_PTipicoes { get; set; }
        public System.Data.Entity.DbSet<opc_PtLinha> opc_PtLinhas { get; set; }
        public System.Data.Entity.DbSet<opc_PtOrigem> opc_PtOrigems { get; set; }
        public System.Data.Entity.DbSet<opc_PtTronco> opc_PtTroncoes { get; set; }
        public System.Data.Entity.DbSet<opc_Renovacao> opc_Renovacaos { get; set; }
        public System.Data.Entity.DbSet<opc_Sinotico> opc_Sinoticoes { get; set; }
        public System.Data.Entity.DbSet<opc_Tarifa> opc_Tarifas { get; set; }
        public System.Data.Entity.DbSet<opc_TarifaMod> opc_TarifaMods { get; set; }
        public System.Data.Entity.DbSet<opc_TCategoria> opc_TCategorias { get; set; }
        public System.Data.Entity.DbSet<opc_Terminai> opc_Terminais { get; set; }
        public System.Data.Entity.DbSet<opc_TotalViagen> opc_TotalViagens { get; set; }
        public System.Data.Entity.DbSet<opc_Tronco> opc_Troncoes { get; set; }
        public System.Data.Entity.DbSet<opc_TServico> opc_TServicoes { get; set; }
        public System.Data.Entity.DbSet<opc_Veiculo> opc_Veiculoes { get; set; }
        public System.Data.Entity.DbSet<opc_VeiculosAtt> opc_VeiculosAtts { get; set; }
        public System.Data.Entity.DbSet<opc_Via> opc_Vias { get; set; }
        public System.Data.Entity.DbSet<opc_Viagen> opc_Viagens { get; set; }
        public System.Data.Entity.DbSet<OperLinha> OperLinhas { get; set; }
        public System.Data.Entity.DbSet<Pais> Pais { get; set; }
        public System.Data.Entity.DbSet<Periodo> Periodoes { get; set; }
        public System.Data.Entity.DbSet<temp_VisPonto> temp_VisPontoes { get; set; }
        public System.Data.Entity.DbSet<Uf> Ufs { get; set; }
        public System.Data.Entity.DbSet<Usuario> Usuarios { get; set; }

        public FakeMyDbContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            Cidades = new FakeDbSet<Cidade>("Id");
            ClassLinhas = new FakeDbSet<ClassLinha>("Id");
            Dominios = new FakeDbSet<Dominio>("Id");
            Empresas = new FakeDbSet<Empresa>("Id");
            EUsuarios = new FakeDbSet<EUsuario>("Id");
            FInstalacoes = new FakeDbSet<FInstalaco>("Id");
            ISinoticoes = new FakeDbSet<ISinotico>("Id");
            Municipios = new FakeDbSet<Municipio>("Id", "UfId", "Municipio_", "Sigla");
            opc_AAbasteces = new FakeDbSet<opc_AAbastece>("Id");
            opc_AAdmins = new FakeDbSet<opc_AAdmin>("Id");
            opc_AAlmoxes = new FakeDbSet<opc_AAlmox>("Id");
            opc_AEstacionas = new FakeDbSet<opc_AEstaciona>("Id");
            opc_AFunilarias = new FakeDbSet<opc_AFunilaria>("Id");
            opc_AGaragems = new FakeDbSet<opc_AGaragem>("Id");
            opc_AInspecaos = new FakeDbSet<opc_AInspecao>("Id");
            opc_ALavacaos = new FakeDbSet<opc_ALavacao>("Id");
            opc_ALubrificas = new FakeDbSet<opc_ALubrifica>("Id");
            opc_AMantems = new FakeDbSet<opc_AMantem>("Id");
            opc_Atendimentoes = new FakeDbSet<opc_Atendimento>("Id");
            opc_ATrafegoes = new FakeDbSet<opc_ATrafego>("Id");
            opc_Carrocerias = new FakeDbSet<opc_Carroceria>("VeiculoId");
            opc_Chassis = new FakeDbSet<opc_Chassis>("VeiculoId");
            opc_CLinhas = new FakeDbSet<opc_CLinha>("Id");
            opc_Corredores = new FakeDbSet<opc_Corredore>("Id");
            opc_Custoes = new FakeDbSet<opc_Custo>("Id");
            opc_CustoMods = new FakeDbSet<opc_CustoMod>("Id", "EmpresaId", "Referencia", "Fixo", "Variavel");
            opc_CVeiculoes = new FakeDbSet<opc_CVeiculo>("Id");
            opc_CVeiculosAtts = new FakeDbSet<opc_CVeiculosAtt>("Id");
            opc_Dimensionars = new FakeDbSet<opc_Dimensionar>("LinhaId", "Sentido");
            opc_EDominios = new FakeDbSet<opc_EDominio>("Id");
            opc_EInstalacoes = new FakeDbSet<opc_EInstalaco>("Id");
            opc_EPeriodoes = new FakeDbSet<opc_EPeriodo>("Id");
            opc_FAjustes = new FakeDbSet<opc_FAjuste>("LinhaId", "Ano", "Mes");
            opc_FViagens = new FakeDbSet<opc_FViagen>("Id");
            opc_Horarios = new FakeDbSet<opc_Horario>("Id");
            opc_Instalacoes = new FakeDbSet<opc_Instalaco>("Id");
            opc_ItAtendimentoes = new FakeDbSet<opc_ItAtendimento>("Id");
            opc_Itinerarios = new FakeDbSet<opc_Itinerario>("Id");
            opc_ItTroncoes = new FakeDbSet<opc_ItTronco>("Id");
            opc_Linhas = new FakeDbSet<opc_Linha>("Id");
            opc_LnCorredores = new FakeDbSet<opc_LnCorredore>("Id");
            opc_LnPesquisas = new FakeDbSet<opc_LnPesquisa>("Id");
            opc_LnTerminais = new FakeDbSet<opc_LnTerminai>("Id");
            opc_LnTroncoes = new FakeDbSet<opc_LnTronco>("Id");
            opc_Lotacoes = new FakeDbSet<opc_Lotaco>("ClasseId", "Classe", "OcupacaoId", "Denominacao");
            opc_Motores = new FakeDbSet<opc_Motore>("Id");
            opc_Ocupacoes = new FakeDbSet<opc_Ocupaco>("Id");
            opc_Ofertas = new FakeDbSet<opc_Oferta>("Id");
            opc_Operacoes = new FakeDbSet<opc_Operaco>("Id");
            opc_Pesquisas = new FakeDbSet<opc_Pesquisa>("Id");
            opc_Pontoes = new FakeDbSet<opc_Ponto>("Id");
            opc_PontosRepetidoes = new FakeDbSet<opc_PontosRepetido>("EmpresaId", "Prefixo", "Identificacao");
            opc_PrLinhas = new FakeDbSet<opc_PrLinha>("Id");
            opc_PtAtendimentoes = new FakeDbSet<opc_PtAtendimento>("Id");
            opc_PtDestinoes = new FakeDbSet<opc_PtDestino>("Id", "LinhaId", "Sentido", "PontoId", "Prefixo", "Identificacao");
            opc_PTipicoes = new FakeDbSet<opc_PTipico>("Id", "LinhaId", "Denominacao", "DiaId", "Inicio", "Termino");
            opc_PtLinhas = new FakeDbSet<opc_PtLinha>("Id");
            opc_PtOrigems = new FakeDbSet<opc_PtOrigem>("Id", "LinhaId", "Sentido", "PontoId", "Prefixo", "Identificacao");
            opc_PtTroncoes = new FakeDbSet<opc_PtTronco>("Id");
            opc_Renovacaos = new FakeDbSet<opc_Renovacao>("Id");
            opc_Sinoticoes = new FakeDbSet<opc_Sinotico>("LinhaId", "Sentido", "SinoticoId");
            opc_Tarifas = new FakeDbSet<opc_Tarifa>("Id");
            opc_TarifaMods = new FakeDbSet<opc_TarifaMod>("Id", "EmpresaId", "Denominacao", "Gratuidade");
            opc_TCategorias = new FakeDbSet<opc_TCategoria>("Id");
            opc_Terminais = new FakeDbSet<opc_Terminai>("Id");
            opc_TotalViagens = new FakeDbSet<opc_TotalViagen>("LinhaId", "DiaId", "Sentido");
            opc_Troncoes = new FakeDbSet<opc_Tronco>("Id");
            opc_TServicoes = new FakeDbSet<opc_TServico>("Id");
            opc_Veiculoes = new FakeDbSet<opc_Veiculo>("Id");
            opc_VeiculosAtts = new FakeDbSet<opc_VeiculosAtt>("Id");
            opc_Vias = new FakeDbSet<opc_Via>("Id");
            opc_Viagens = new FakeDbSet<opc_Viagen>("Id");
            OperLinhas = new FakeDbSet<OperLinha>("Id");
            Pais = new FakeDbSet<Pais>("Id");
            Periodoes = new FakeDbSet<Periodo>("Id");
            temp_VisPontoes = new FakeDbSet<temp_VisPonto>("Id");
            Ufs = new FakeDbSet<Uf>("Id");
            Usuarios = new FakeDbSet<Usuario>("Id");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


        // Stored Procedures
        public int temp_AddPontosVisate()
        {

            return 0;
        }

        public int temp_UpdatePontosVisate()
        {

            return 0;
        }

    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override System.Collections.Generic.IEnumerable<TEntity> RemoveRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Remove(entity);
            }
            return items;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            var m = expression as System.Linq.Expressions.MethodCallExpression;
            if (m != null)
            {
                var resultType = m.Method.ReturnType; // it shoud be IQueryable<T>
                var tElement = resultType.GetGenericArguments()[0];
                var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(tElement);
                return (IQueryable) System.Activator.CreateInstance(queryType, expression);
            }
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            var queryType = typeof(FakeDbAsyncEnumerable<>).MakeGenericType(typeof(TElement));
            return (IQueryable<TElement>)System.Activator.CreateInstance(queryType, expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // Cidades
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Cidade
    {
        public string Id { get; set; } // Id (Primary key) (length: 8)
        public int UfId { get; set; } // UfId
        public string Municipio { get; set; } // Municipio (length: 64)

        // Foreign keys

        /// <summary>
        /// Parent Uf pointed by [Cidades].([UfId]) (Cidades_uf)
        /// </summary>
        public virtual Uf Uf { get; set; } // Cidades_uf
    }

    // ClassLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class ClassLinha
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Descricao { get; set; } // Descricao (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child opc_CLinhas where [CLinhas].[ClassLinhaId] point to this entity (CLinhas_classlinha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_CLinha> opc_CLinhas { get; set; } // CLinhas.CLinhas_classlinha

        public ClassLinha()
        {
            opc_CLinhas = new System.Collections.Generic.List<opc_CLinha>();
        }
    }

    // Dominios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Dominio
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 32)
        public string Descricao { get; set; } // Descricao (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child opc_EDominios where [EDominios].[DominioId] point to this entity (EDominios_dominio)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_EDominio> opc_EDominios { get; set; } // EDominios.EDominios_dominio

        public Dominio()
        {
            opc_EDominios = new System.Collections.Generic.List<opc_EDominio>();
        }
    }

    // Empresas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Empresa
    {
        public int Id { get; set; } // Id (Primary key)
        public string Razao { get; set; } // Razao (length: 64)
        public string Fantasia { get; set; } // Fantasia (length: 64)
        public string Cnpj { get; set; } // Cnpj (length: 32)
        public string IEstadual { get; set; } // IEstadual (length: 16)
        public string IMunicipal { get; set; } // IMunicipal (length: 16)
        public string Endereco { get; set; } // Endereco (length: 128)
        public string EnderecoNo { get; set; } // EnderecoNo (length: 8)
        public string Complemento { get; set; } // Complemento (length: 64)
        public int? Cep { get; set; } // Cep
        public string Bairro { get; set; } // Bairro (length: 32)
        public string Municipio { get; set; } // Municipio (length: 32)
        public string UfId { get; set; } // UfId (length: 2)
        public string PaisId { get; set; } // PaisId (length: 8)
        public string Telefone { get; set; } // Telefone (length: 32)
        public string Email { get; set; } // Email (length: 256)
        public System.TimeSpan? Inicio { get; set; } // Inicio
        public System.TimeSpan? Termino { get; set; } // Termino
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child EUsuarios where [EUsuarios].[EmpresaId] point to this entity (EUsuarios_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EUsuario> EUsuarios { get; set; } // EUsuarios.EUsuarios_empresa
        /// <summary>
        /// Child opc_CLinhas where [CLinhas].[EmpresaId] point to this entity (CLinhas_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_CLinha> opc_CLinhas { get; set; } // CLinhas.CLinhas_empresa
        /// <summary>
        /// Child opc_Corredores where [Corredores].[EmpresaId] point to this entity (Corredores_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Corredore> opc_Corredores { get; set; } // Corredores.Corredores_empresa
        /// <summary>
        /// Child opc_Custoes where [Custos].[EmpresaId] point to this entity (Custos_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Custo> opc_Custoes { get; set; } // Custos.Custos_empresa
        /// <summary>
        /// Child opc_EDominios where [EDominios].[EmpresaId] point to this entity (Dominios_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_EDominio> opc_EDominios { get; set; } // EDominios.Dominios_empresa
        /// <summary>
        /// Child opc_EPeriodoes where [EPeriodos].[EmpresaId] point to this entity (EPeriodos_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_EPeriodo> opc_EPeriodoes { get; set; } // EPeriodos.EPeriodos_empresa
        /// <summary>
        /// Child opc_Instalacoes where [Instalacoes].[EmpresaId] point to this entity (Instalacoes_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Instalaco> opc_Instalacoes { get; set; } // Instalacoes.Instalacoes_empresa
        /// <summary>
        /// Child opc_Linhas where [Linhas].[EmpresaId] point to this entity (Linhas_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Linha> opc_Linhas { get; set; } // Linhas.Linhas_empresa
        /// <summary>
        /// Child opc_Operacoes where [Operacoes].[EmpresaId] point to this entity (Operacoes_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Operaco> opc_Operacoes { get; set; } // Operacoes.Operacoes_empresa
        /// <summary>
        /// Child opc_Pesquisas where [Pesquisas].[EmpresaId] point to this entity (Pesquisas_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas.Pesquisas_empresa
        /// <summary>
        /// Child opc_Pontoes where [Pontos].[EmpresaId] point to this entity (Pontos_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Ponto> opc_Pontoes { get; set; } // Pontos.Pontos_empresa
        /// <summary>
        /// Child opc_Tarifas where [Tarifas].[EmpresaId] point to this entity (Tarifas_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Tarifa> opc_Tarifas { get; set; } // Tarifas.Tarifas_empresa
        /// <summary>
        /// Child opc_TCategorias where [TCategorias].[EmpresaId] point to this entity (TCategorias_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_TCategoria> opc_TCategorias { get; set; } // TCategorias.TCategorias_empresa
        /// <summary>
        /// Child opc_Terminais where [Terminais].[EmpresaId] point to this entity (Terminais_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Terminai> opc_Terminais { get; set; } // Terminais.Terminais_empresa
        /// <summary>
        /// Child opc_Troncoes where [Troncos].[EmpresaId] point to this entity (Troncos_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Tronco> opc_Troncoes { get; set; } // Troncos.Troncos_empresa
        /// <summary>
        /// Child opc_Veiculoes where [Veiculos].[EmpresaId] point to this entity (Veiculos_empresa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Veiculo> opc_Veiculoes { get; set; } // Veiculos.Veiculos_empresa

        // Foreign keys

        /// <summary>
        /// Parent Pais pointed by [Empresas].([PaisId]) (Empresas_pais)
        /// </summary>
        public virtual Pais Pais { get; set; } // Empresas_pais

        public Empresa()
        {
            Cadastro = System.DateTime.Now;
            opc_CLinhas = new System.Collections.Generic.List<opc_CLinha>();
            opc_Corredores = new System.Collections.Generic.List<opc_Corredore>();
            opc_Custoes = new System.Collections.Generic.List<opc_Custo>();
            opc_EDominios = new System.Collections.Generic.List<opc_EDominio>();
            opc_EPeriodoes = new System.Collections.Generic.List<opc_EPeriodo>();
            EUsuarios = new System.Collections.Generic.List<EUsuario>();
            opc_Instalacoes = new System.Collections.Generic.List<opc_Instalaco>();
            opc_Linhas = new System.Collections.Generic.List<opc_Linha>();
            opc_Operacoes = new System.Collections.Generic.List<opc_Operaco>();
            opc_Pesquisas = new System.Collections.Generic.List<opc_Pesquisa>();
            opc_Pontoes = new System.Collections.Generic.List<opc_Ponto>();
            opc_Tarifas = new System.Collections.Generic.List<opc_Tarifa>();
            opc_TCategorias = new System.Collections.Generic.List<opc_TCategoria>();
            opc_Terminais = new System.Collections.Generic.List<opc_Terminai>();
            opc_Troncoes = new System.Collections.Generic.List<opc_Tronco>();
            opc_Veiculoes = new System.Collections.Generic.List<opc_Veiculo>();
        }
    }

    // EUsuarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class EUsuario
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int UsuarioId { get; set; } // UsuarioId
        public bool Ativo { get; set; } // Ativo
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [EUsuarios].([EmpresaId]) (EUsuarios_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // EUsuarios_empresa

        /// <summary>
        /// Parent Usuario pointed by [EUsuarios].([UsuarioId]) (EUsuarios_usuario)
        /// </summary>
        public virtual Usuario Usuario { get; set; } // EUsuarios_usuario

        public EUsuario()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // FInstalacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class FInstalaco
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Descricao { get; set; } // Descricao (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child opc_EInstalacoes where [EInstalacoes].[PropositoId] point to this entity (EInstalacoes_proposito)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_EInstalaco> opc_EInstalacoes { get; set; } // EInstalacoes.EInstalacoes_proposito

        public FInstalaco()
        {
            opc_EInstalacoes = new System.Collections.Generic.List<opc_EInstalaco>();
        }
    }

    // ISinotico
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class ISinotico
    {
        public int Id { get; set; } // Id (Primary key)
        public string Classe { get; set; } // Classe (length: 32)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Unidade { get; set; } // Unidade (length: 16)
    }

    // Municipios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Municipio
    {
        public string Id { get; set; } // Id (Primary key) (length: 8)
        public int UfId { get; set; } // UfId (Primary key)
        public string Municipio_ { get; set; } // Municipio (Primary key) (length: 64)
        public string Sigla { get; set; } // Sigla (Primary key) (length: 2)
    }

    // AAbastece
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AAbastece
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public int PavimentoId { get; set; } // PavimentoId
        public int Bombas { get; set; } // Bombas

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AAbastece].([InstalacaoId]) (AAbastece_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AAbastece_instalacao

        /// <summary>
        /// Parent opc_Via pointed by [AAbastece].([PavimentoId]) (AAbastece_pavimento)
        /// </summary>
        public virtual opc_Via opc_Via { get; set; } // AAbastece_pavimento
    }

    // AAdmin
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AAdmin
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public decimal? Requisitom2 { get; set; } // Requisitom2
        public decimal Disponivelm2 { get; set; } // Disponivelm2

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AAdmin].([InstalacaoId]) (AAdmin_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AAdmin_instalacao
    }

    // AAlmox
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AAlmox
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public decimal? Area { get; set; } // Area
        public bool Especifico { get; set; } // Especifico
        public bool Estoque { get; set; } // Estoque

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AAlmox].([InstalacaoId]) (AAlmox_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AAlmox_instalacao
    }

    // AEstaciona
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AEstaciona
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public int Frota { get; set; } // Frota
        public decimal Requisitom2 { get; set; } // Requisitom2
        public decimal Minimom2 { get; set; } // Minimom2
        public decimal Disponivelm2 { get; set; } // Disponivelm2

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AEstaciona].([InstalacaoId]) (AEstaciona_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AEstaciona_instalacao
    }

    // AFunilaria
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AFunilaria
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public decimal? Area { get; set; } // Area
        public bool Isolada { get; set; } // Isolada
        public byte? PPoluicao { get; set; } // PPoluicao
        public byte? Exaustao { get; set; } // Exaustao

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AFunilaria].([InstalacaoId]) (AFunilaria_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AFunilaria_instalacao
    }

    // AGaragem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AGaragem
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public int Frota { get; set; } // Frota
        public decimal Requisitom2 { get; set; } // Requisitom2
        public decimal Minimom2 { get; set; } // Minimom2
        public decimal Disponivelm2 { get; set; } // Disponivelm2

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AGaragem].([InstalacaoId]) (AGaragem_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AGaragem_instalacao
    }

    // AInspecao
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AInspecao
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public int Rampas { get; set; } // Rampas

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AInspecao].([InstalacaoId]) (AInspecao_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AInspecao_instalacao
    }

    // ALavacao
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ALavacao
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public int? Maquinas { get; set; } // Maquinas
        public decimal Aguam3 { get; set; } // Aguam3

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [ALavacao].([InstalacaoId]) (ALavacao_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // ALavacao_instalacao
    }

    // ALubrifica
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ALubrifica
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public byte? Lavacao { get; set; } // Lavacao
        public bool Ceramico { get; set; } // Ceramico
        public bool Protecao { get; set; } // Protecao

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [ALubrifica].([InstalacaoId]) (ALubrifica_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // ALubrifica_instalacao
    }

    // AMantem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AMantem
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public decimal? Area { get; set; } // Area
        public int? PontosAr { get; set; } // PontosAr
        public byte Eletricidade { get; set; } // Eletricidade
        public int? Elevadores { get; set; } // Elevadores

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [AMantem].([InstalacaoId]) (AMantem_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // AMantem_instalacao
    }

    // Atendimentos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Atendimento
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public string Prefixo { get; set; } // Prefixo (length: 16)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public bool Uteis { get; set; } // Uteis
        public bool Sabados { get; set; } // Sabados
        public bool Domingos { get; set; } // Domingos
        public decimal? ExtensaoAb { get; set; } // ExtensaoAB
        public decimal? ExtensaoBa { get; set; } // ExtensaoBA
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Horarios where [Horarios].[AtendimentoId] point to this entity (Horarios_atendimento)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Horario> opc_Horarios { get; set; } // Horarios.Horarios_atendimento
        /// <summary>
        /// Child opc_ItAtendimentoes where [ItAtendimentos].[AtendimentoId] point to this entity (ItAtendimentos_atendimento)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_ItAtendimento> opc_ItAtendimentoes { get; set; } // ItAtendimentos.ItAtendimentos_atendimento
        /// <summary>
        /// Child opc_PtAtendimentoes where [PtAtendimentos].[AtendimentoId] point to this entity (PtAtendimentos_atendimento)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtAtendimento> opc_PtAtendimentoes { get; set; } // PtAtendimentos.PtAtendimentos_atendimento

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [Atendimentos].([LinhaId]) (Atendimentos_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // Atendimentos_linha

        public opc_Atendimento()
        {
            Cadastro = System.DateTime.Now;
            opc_Horarios = new System.Collections.Generic.List<opc_Horario>();
            opc_ItAtendimentoes = new System.Collections.Generic.List<opc_ItAtendimento>();
            opc_PtAtendimentoes = new System.Collections.Generic.List<opc_PtAtendimento>();
        }
    }

    // ATrafego
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ATrafego
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public byte? Plantao { get; set; } // Plantao
        public byte? Reserva { get; set; } // Reserva
        public byte? Equipamentos { get; set; } // Equipamentos
        public byte? Mobiliario { get; set; } // Mobiliario

        // Foreign keys

        /// <summary>
        /// Parent opc_EInstalaco pointed by [ATrafego].([InstalacaoId]) (ATrafego_instalacao)
        /// </summary>
        public virtual opc_EInstalaco opc_EInstalaco { get; set; } // ATrafego_instalacao
    }

    // Carrocerias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Carroceria
    {
        public int VeiculoId { get; set; } // VeiculoId (Primary key)
        public string Fabricante { get; set; } // Fabricante (length: 64)
        public string Modelo { get; set; } // Modelo (length: 64)
        public string Referencia { get; set; } // Referencia (length: 32)
        public int? Ano { get; set; } // Ano
        public System.DateTime? Aquisicao { get; set; } // Aquisicao
        public string Fornecedor { get; set; } // Fornecedor (length: 64)
        public string NotaFiscal { get; set; } // NotaFiscal (length: 16)
        public decimal? Valor { get; set; } // Valor
        public string ChaveNfe { get; set; } // ChaveNfe (length: 64)
        public System.DateTime? Encarroca { get; set; } // Encarroca
        public byte Portas { get; set; } // Portas
        public byte? Assentos { get; set; } // Assentos
        public byte? Capacidade { get; set; } // Capacidade
        public string Piso { get; set; } // Piso (length: 32)
        public bool EscapeV { get; set; } // EscapeV
        public bool EscapeH { get; set; } // EscapeH
        public int? Catraca { get; set; } // Catraca
        public int PortaIn { get; set; } // PortaIn
        public bool SaidaFrente { get; set; } // SaidaFrente
        public bool SaidaMeio { get; set; } // SaidaMeio
        public bool SaidaTras { get; set; } // SaidaTras

        // Foreign keys

        /// <summary>
        /// Parent opc_Veiculo pointed by [Carrocerias].([VeiculoId]) (Carrocerias_veiculo)
        /// </summary>
        public virtual opc_Veiculo opc_Veiculo { get; set; } // Carrocerias_veiculo

        public opc_Carroceria()
        {
            Portas = 2;
            EscapeV = false;
            EscapeH = false;
            PortaIn = 1;
            SaidaFrente = false;
            SaidaMeio = true;
            SaidaTras = true;
        }
    }

    // Chassis
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Chassis
    {
        public int VeiculoId { get; set; } // VeiculoId (Primary key)
        public string Fabricante { get; set; } // Fabricante (length: 64)
        public string Modelo { get; set; } // Modelo (length: 64)
        public string ChassiNo { get; set; } // ChassiNo (length: 32)
        public int? Ano { get; set; } // Ano
        public System.DateTime? Aquisicao { get; set; } // Aquisicao
        public string Fornecedor { get; set; } // Fornecedor (length: 64)
        public string NotaFiscal { get; set; } // NotaFiscal (length: 16)
        public decimal? Valor { get; set; } // Valor
        public string ChaveNfe { get; set; } // ChaveNfe (length: 64)
        public int? MotorId { get; set; } // MotorId
        public string Potencia { get; set; } // Potencia (length: 32)
        public int? PosMotor { get; set; } // PosMotor
        public byte EixosFrente { get; set; } // EixosFrente
        public byte EixosTras { get; set; } // EixosTras
        public string PneusFrente { get; set; } // PneusFrente (length: 16)
        public string PneusTras { get; set; } // PneusTras (length: 16)
        public int? TransmiteId { get; set; } // TransmiteId
        public int? DirecaoId { get; set; } // DirecaoId

        // Foreign keys

        /// <summary>
        /// Parent opc_Motore pointed by [Chassis].([MotorId]) (Chassis_motor)
        /// </summary>
        public virtual opc_Motore opc_Motore { get; set; } // Chassis_motor

        /// <summary>
        /// Parent opc_Veiculo pointed by [Chassis].([VeiculoId]) (Chassis_veiculo)
        /// </summary>
        public virtual opc_Veiculo opc_Veiculo { get; set; } // Chassis_veiculo

        public opc_Chassis()
        {
            EixosFrente = 1;
            EixosTras = 1;
        }
    }

    // CLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CLinha
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int? ClassLinhaId { get; set; } // ClassLinhaId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Linhas where [Linhas].[Classificacao] point to this entity (Linhas_classificacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Linha> opc_Linhas { get; set; } // Linhas.Linhas_classificacao
        /// <summary>
        /// Child opc_Pesquisas where [Pesquisas].[Classificacao] point to this entity (Pesquisas_classificacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas.Pesquisas_classificacao

        // Foreign keys

        /// <summary>
        /// Parent ClassLinha pointed by [CLinhas].([ClassLinhaId]) (CLinhas_classlinha)
        /// </summary>
        public virtual ClassLinha ClassLinha { get; set; } // CLinhas_classlinha

        /// <summary>
        /// Parent Empresa pointed by [CLinhas].([EmpresaId]) (CLinhas_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // CLinhas_empresa

        public opc_CLinha()
        {
            Cadastro = System.DateTime.Now;
            opc_Linhas = new System.Collections.Generic.List<opc_Linha>();
            opc_Pesquisas = new System.Collections.Generic.List<opc_Pesquisa>();
        }
    }

    // Corredores
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Corredore
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Prefixo { get; set; } // Prefixo (length: 16)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Caracteristicas { get; set; } // Caracteristicas (length: 512)
        public string Municipio { get; set; } // Municipio (length: 32)
        public string UfId { get; set; } // UfId (length: 2)
        public decimal? Extensao { get; set; } // Extensao
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_LnCorredores where [LnCorredores].[CorredorId] point to this entity (LnCorredores_corredor)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnCorredore> opc_LnCorredores { get; set; } // LnCorredores.LnCorredores_corredor
        /// <summary>
        /// Child opc_Pesquisas where [Pesquisas].[CorredorId] point to this entity (Pesquisas_corredor)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas.Pesquisas_corredor

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Corredores].([EmpresaId]) (Corredores_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Corredores_empresa

        public opc_Corredore()
        {
            Cadastro = System.DateTime.Now;
            opc_LnCorredores = new System.Collections.Generic.List<opc_LnCorredore>();
            opc_Pesquisas = new System.Collections.Generic.List<opc_Pesquisa>();
        }
    }

    // Custos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Custo
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public System.DateTime Referencia { get; set; } // Referencia
        public decimal Fixo { get; set; } // Fixo
        public decimal Variavel { get; set; } // Variavel

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Custos].([EmpresaId]) (Custos_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Custos_empresa
    }

    // CustoMod
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CustoMod
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId (Primary key)
        public System.DateTime Referencia { get; set; } // Referencia (Primary key)
        public decimal Fixo { get; set; } // Fixo (Primary key)
        public decimal Variavel { get; set; } // Variavel (Primary key)
    }

    // CVeiculos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CVeiculo
    {
        public int Id { get; set; } // Id (Primary key)
        public string Categoria { get; set; } // Categoria (length: 16)
        public string Classe { get; set; } // Classe (length: 32)
        public int? Minimo { get; set; } // Minimo
        public int? Maximo { get; set; } // Maximo

        // Reverse navigation

        /// <summary>
        /// Child opc_PrLinhas where [PrLinhas].[CVeiculoId] point to this entity (PrLinhas_cveiculo)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PrLinha> opc_PrLinhas { get; set; } // PrLinhas.PrLinhas_cveiculo
        /// <summary>
        /// Child opc_Veiculoes where [Veiculos].[Classe] point to this entity (Veiculos_classe)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Veiculo> opc_Veiculoes { get; set; } // Veiculos.Veiculos_classe
        /// <summary>
        /// Child opc_VeiculosAtts where [VeiculosAtt].[Classe] point to this entity (VeiculosAtt_classe)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_VeiculosAtt> opc_VeiculosAtts { get; set; } // VeiculosAtt.VeiculosAtt_classe

        public opc_CVeiculo()
        {
            opc_PrLinhas = new System.Collections.Generic.List<opc_PrLinha>();
            opc_Veiculoes = new System.Collections.Generic.List<opc_Veiculo>();
            opc_VeiculosAtts = new System.Collections.Generic.List<opc_VeiculosAtt>();
        }
    }

    // CVeiculosAtt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CVeiculosAtt
    {
        public int Id { get; set; } // Id (Primary key)
        public string Caracteristica { get; set; } // Caracteristica (length: 128)
        public string Unidade { get; set; } // Unidade (length: 16)
        public bool Variavel { get; set; } // Variavel

        // Reverse navigation

        /// <summary>
        /// Child opc_VeiculosAtts where [VeiculosAtt].[Attributo] point to this entity (VeiculosAtt_atributo)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_VeiculosAtt> opc_VeiculosAtts { get; set; } // VeiculosAtt.VeiculosAtt_atributo

        public opc_CVeiculosAtt()
        {
            opc_VeiculosAtts = new System.Collections.Generic.List<opc_VeiculosAtt>();
        }
    }

    // Dimensionar
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Dimensionar
    {
        public int LinhaId { get; set; } // LinhaId (Primary key)
        public int? DiaId { get; set; } // DiaId
        public int? PeriodoId { get; set; } // PeriodoId
        public string Sentido { get; set; } // Sentido (Primary key) (length: 2)
        public int? QtdViagens { get; set; } // QtdViagens
        public System.TimeSpan? Inicio { get; set; } // Inicio
        public System.TimeSpan? Termino { get; set; } // Termino
        public int? Ociosidade { get; set; } // Ociosidade
        public int? Passageiros { get; set; } // Passageiros
        public int? Ajustado { get; set; } // Ajustado
        public int? Critica { get; set; } // Critica
        public int? CriticaAjuste { get; set; } // CriticaAjuste
        public int? Desvio { get; set; } // Desvio
        public int? DesvioAjuste { get; set; } // DesvioAjuste
        public int? LotacaoP { get; set; } // LotacaoP
        public int? Veiculos { get; set; } // Veiculos
        public int? CicloAb { get; set; } // CicloAB
        public int? CicloBa { get; set; } // CicloBA
        public decimal? Extensao { get; set; } // Extensao
    }

    // EDominios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_EDominio
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int DominioId { get; set; } // DominioId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Linhas where [Linhas].[DominioId] point to this entity (Linhas_dominio)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Linha> opc_Linhas { get; set; } // Linhas.Linhas_dominio

        // Foreign keys

        /// <summary>
        /// Parent Dominio pointed by [EDominios].([DominioId]) (EDominios_dominio)
        /// </summary>
        public virtual Dominio Dominio { get; set; } // EDominios_dominio

        /// <summary>
        /// Parent Empresa pointed by [EDominios].([EmpresaId]) (Dominios_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Dominios_empresa

        public opc_EDominio()
        {
            Cadastro = System.DateTime.Now;
            opc_Linhas = new System.Collections.Generic.List<opc_Linha>();
        }
    }

    // EInstalacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_EInstalaco
    {
        public int Id { get; set; } // Id (Primary key)
        public int InstalacaoId { get; set; } // InstalacaoId
        public int PropositoId { get; set; } // PropositoId
        public decimal? AreaCoberta { get; set; } // AreaCoberta
        public decimal? AreaTotal { get; set; } // AreaTotal
        public int? QtdEmpregados { get; set; } // QtdEmpregados
        public System.TimeSpan? Inicio { get; set; } // Inicio
        public System.TimeSpan? Termino { get; set; } // Termino
        public bool Efluentes { get; set; } // Efluentes
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_AAbasteces where [AAbastece].[InstalacaoId] point to this entity (AAbastece_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AAbastece> opc_AAbasteces { get; set; } // AAbastece.AAbastece_instalacao
        /// <summary>
        /// Child opc_AAdmins where [AAdmin].[InstalacaoId] point to this entity (AAdmin_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AAdmin> opc_AAdmins { get; set; } // AAdmin.AAdmin_instalacao
        /// <summary>
        /// Child opc_AAlmoxes where [AAlmox].[InstalacaoId] point to this entity (AAlmox_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AAlmox> opc_AAlmoxes { get; set; } // AAlmox.AAlmox_instalacao
        /// <summary>
        /// Child opc_AEstacionas where [AEstaciona].[InstalacaoId] point to this entity (AEstaciona_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AEstaciona> opc_AEstacionas { get; set; } // AEstaciona.AEstaciona_instalacao
        /// <summary>
        /// Child opc_AFunilarias where [AFunilaria].[InstalacaoId] point to this entity (AFunilaria_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AFunilaria> opc_AFunilarias { get; set; } // AFunilaria.AFunilaria_instalacao
        /// <summary>
        /// Child opc_AGaragems where [AGaragem].[InstalacaoId] point to this entity (AGaragem_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AGaragem> opc_AGaragems { get; set; } // AGaragem.AGaragem_instalacao
        /// <summary>
        /// Child opc_AInspecaos where [AInspecao].[InstalacaoId] point to this entity (AInspecao_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AInspecao> opc_AInspecaos { get; set; } // AInspecao.AInspecao_instalacao
        /// <summary>
        /// Child opc_ALavacaos where [ALavacao].[InstalacaoId] point to this entity (ALavacao_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_ALavacao> opc_ALavacaos { get; set; } // ALavacao.ALavacao_instalacao
        /// <summary>
        /// Child opc_ALubrificas where [ALubrifica].[InstalacaoId] point to this entity (ALubrifica_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_ALubrifica> opc_ALubrificas { get; set; } // ALubrifica.ALubrifica_instalacao
        /// <summary>
        /// Child opc_AMantems where [AMantem].[InstalacaoId] point to this entity (AMantem_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AMantem> opc_AMantems { get; set; } // AMantem.AMantem_instalacao
        /// <summary>
        /// Child opc_ATrafegoes where [ATrafego].[InstalacaoId] point to this entity (ATrafego_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_ATrafego> opc_ATrafegoes { get; set; } // ATrafego.ATrafego_instalacao

        // Foreign keys

        /// <summary>
        /// Parent FInstalaco pointed by [EInstalacoes].([PropositoId]) (EInstalacoes_proposito)
        /// </summary>
        public virtual FInstalaco FInstalaco { get; set; } // EInstalacoes_proposito

        /// <summary>
        /// Parent opc_Instalaco pointed by [EInstalacoes].([InstalacaoId]) (EInstalacoes_instalacao)
        /// </summary>
        public virtual opc_Instalaco opc_Instalaco { get; set; } // EInstalacoes_instalacao

        public opc_EInstalaco()
        {
            Cadastro = System.DateTime.Now;
            opc_AAbasteces = new System.Collections.Generic.List<opc_AAbastece>();
            opc_AAdmins = new System.Collections.Generic.List<opc_AAdmin>();
            opc_AAlmoxes = new System.Collections.Generic.List<opc_AAlmox>();
            opc_AEstacionas = new System.Collections.Generic.List<opc_AEstaciona>();
            opc_AFunilarias = new System.Collections.Generic.List<opc_AFunilaria>();
            opc_AGaragems = new System.Collections.Generic.List<opc_AGaragem>();
            opc_AInspecaos = new System.Collections.Generic.List<opc_AInspecao>();
            opc_ALavacaos = new System.Collections.Generic.List<opc_ALavacao>();
            opc_ALubrificas = new System.Collections.Generic.List<opc_ALubrifica>();
            opc_AMantems = new System.Collections.Generic.List<opc_AMantem>();
            opc_ATrafegoes = new System.Collections.Generic.List<opc_ATrafego>();
        }
    }

    // EPeriodos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_EPeriodo
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int PeriodoId { get; set; } // PeriodoId
        public string Denominacao { get; set; } // Denominacao (length: 32)
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_PrLinhas where [PrLinhas].[PeriodoId] point to this entity (PrLinhas_periodo)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PrLinha> opc_PrLinhas { get; set; } // PrLinhas.PrLinhas_periodo

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [EPeriodos].([EmpresaId]) (EPeriodos_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // EPeriodos_empresa

        /// <summary>
        /// Parent Periodo pointed by [EPeriodos].([PeriodoId]) (EPeriodos_periodo)
        /// </summary>
        public virtual Periodo Periodo { get; set; } // EPeriodos_periodo

        public opc_EPeriodo()
        {
            Cadastro = System.DateTime.Now;
            opc_PrLinhas = new System.Collections.Generic.List<opc_PrLinha>();
        }
    }

    // FAjuste
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_FAjuste
    {
        public int LinhaId { get; set; } // LinhaId (Primary key)
        public int Ano { get; set; } // Ano (Primary key)
        public int Mes { get; set; } // Mes (Primary key)
        public System.DateTime? Referencia { get; set; } // Referencia
        public int? Passageiros { get; set; } // Passageiros
        public decimal? Fator { get; set; } // Fator
    }

    // FViagens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_FViagen
    {
        public int Id { get; set; } // Id (Primary key)
        public int ViagemId { get; set; } // ViagemId
        public int PontoId { get; set; } // PontoId
        public int? Embarques { get; set; } // Embarques
        public int? Desembarques { get; set; } // Desembarques
        public int? Acumulado { get; private set; } // Acumulado

        // Foreign keys

        /// <summary>
        /// Parent opc_PtLinha pointed by [FViagens].([PontoId]) (FViagens_ponto)
        /// </summary>
        public virtual opc_PtLinha opc_PtLinha { get; set; } // FViagens_ponto

        /// <summary>
        /// Parent opc_Viagen pointed by [FViagens].([ViagemId]) (FViagens_viagem)
        /// </summary>
        public virtual opc_Viagen opc_Viagen { get; set; } // FViagens_viagem
    }

    // Horarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Horario
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public int DiaId { get; set; } // DiaId
        public string Sentido { get; set; } // Sentido (length: 2)
        public System.TimeSpan Inicio { get; set; } // Inicio
        public int? AtendimentoId { get; set; } // AtendimentoId
        public int? PeriodoId { get; private set; } // PeriodoId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Viagens where [Viagens].[HorarioId] point to this entity (Viagens_horario)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Viagen> opc_Viagens { get; set; } // Viagens.Viagens_horario

        // Foreign keys

        /// <summary>
        /// Parent opc_Atendimento pointed by [Horarios].([AtendimentoId]) (Horarios_atendimento)
        /// </summary>
        public virtual opc_Atendimento opc_Atendimento { get; set; } // Horarios_atendimento

        /// <summary>
        /// Parent opc_Linha pointed by [Horarios].([LinhaId]) (Horarios_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // Horarios_linha

        public opc_Horario()
        {
            Cadastro = System.DateTime.Now;
            opc_Viagens = new System.Collections.Generic.List<opc_Viagen>();
        }
    }

    // Instalacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Instalaco
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Prefixo { get; set; } // Prefixo (length: 16)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Endereco { get; set; } // Endereco (length: 128)
        public string EnderecoNo { get; set; } // EnderecoNo (length: 8)
        public string Complemento { get; set; } // Complemento (length: 64)
        public int? Cep { get; set; } // Cep
        public string Bairro { get; set; } // Bairro (length: 32)
        public string Municipio { get; set; } // Municipio (length: 32)
        public string UfId { get; set; } // UfId (length: 2)
        public string Telefone { get; set; } // Telefone (length: 32)
        public string Email { get; set; } // Email (length: 256)
        public decimal? Latitude { get; set; } // Latitude
        public decimal? Longitude { get; set; } // Longitude
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_EInstalacoes where [EInstalacoes].[InstalacaoId] point to this entity (EInstalacoes_instalacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_EInstalaco> opc_EInstalacoes { get; set; } // EInstalacoes.EInstalacoes_instalacao

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Instalacoes].([EmpresaId]) (Instalacoes_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Instalacoes_empresa

        public opc_Instalaco()
        {
            Cadastro = System.DateTime.Now;
            opc_EInstalacoes = new System.Collections.Generic.List<opc_EInstalaco>();
        }
    }

    // ItAtendimentos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ItAtendimento
    {
        public int Id { get; set; } // Id (Primary key)
        public int AtendimentoId { get; set; } // AtendimentoId
        public string Sentido { get; set; } // Sentido (length: 2)
        public string Percurso { get; set; } // Percurso (length: 256)
        public decimal? Extensao { get; set; } // Extensao
        public int? PavimentoId { get; set; } // PavimentoId
        public decimal? Abrangencia { get; set; } // Abrangencia
        public int? CondicaoId { get; set; } // CondicaoId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Atendimento pointed by [ItAtendimentos].([AtendimentoId]) (ItAtendimentos_atendimento)
        /// </summary>
        public virtual opc_Atendimento opc_Atendimento { get; set; } // ItAtendimentos_atendimento

        /// <summary>
        /// Parent opc_Via pointed by [ItAtendimentos].([PavimentoId]) (ItAtendimentos_pavimento)
        /// </summary>
        public virtual opc_Via opc_Via { get; set; } // ItAtendimentos_pavimento

        public opc_ItAtendimento()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // Itinerarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Itinerario
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public string Sentido { get; set; } // Sentido (length: 2)
        public string Percurso { get; set; } // Percurso (length: 256)
        public decimal? Extensao { get; set; } // Extensao
        public int? PavimentoId { get; set; } // PavimentoId
        public decimal? Abrangencia { get; set; } // Abrangencia
        public int? CondicaoId { get; set; } // CondicaoId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [Itinerarios].([LinhaId]) (Itinerarios_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // Itinerarios_linha

        /// <summary>
        /// Parent opc_Via pointed by [Itinerarios].([PavimentoId]) (Itinerarios_pavimento)
        /// </summary>
        public virtual opc_Via opc_Via { get; set; } // Itinerarios_pavimento

        public opc_Itinerario()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // ItTroncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ItTronco
    {
        public int Id { get; set; } // Id (Primary key)
        public int TroncoId { get; set; } // TroncoId
        public string Sentido { get; set; } // Sentido (length: 2)
        public string Percurso { get; set; } // Percurso (length: 256)
        public decimal? Extensao { get; set; } // Extensao
        public int? PavimentoId { get; set; } // PavimentoId
        public decimal? Abrangencia { get; set; } // Abrangencia
        public int? CondicaoId { get; set; } // CondicaoId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Tronco pointed by [ItTroncos].([TroncoId]) (ItTroncos_tronco)
        /// </summary>
        public virtual opc_Tronco opc_Tronco { get; set; } // ItTroncos_tronco

        /// <summary>
        /// Parent opc_Via pointed by [ItTroncos].([PavimentoId]) (ItTroncos_pavimento)
        /// </summary>
        public virtual opc_Via opc_Via { get; set; } // ItTroncos_pavimento

        public opc_ItTronco()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // Linhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Linha
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Prefixo { get; set; } // Prefixo (length: 16)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public bool Uteis { get; set; } // Uteis
        public bool Sabados { get; set; } // Sabados
        public bool Domingos { get; set; } // Domingos
        public int DominioId { get; set; } // DominioId
        public int OperacaoId { get; set; } // OperacaoId
        public int Classificacao { get; set; } // Classificacao
        public bool Captacao { get; set; } // Captacao
        public bool Transporte { get; set; } // Transporte
        public bool Distribuicao { get; set; } // Distribuicao
        public decimal? ExtensaoAb { get; set; } // ExtensaoAB
        public decimal? ExtensaoBa { get; set; } // ExtensaoBA
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Atendimentoes where [Atendimentos].[LinhaId] point to this entity (Atendimentos_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Atendimento> opc_Atendimentoes { get; set; } // Atendimentos.Atendimentos_linha
        /// <summary>
        /// Child opc_Horarios where [Horarios].[LinhaId] point to this entity (Horarios_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Horario> opc_Horarios { get; set; } // Horarios.Horarios_linha
        /// <summary>
        /// Child opc_Itinerarios where [Itinerarios].[LinhaId] point to this entity (Itinerarios_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Itinerario> opc_Itinerarios { get; set; } // Itinerarios.Itinerarios_linha
        /// <summary>
        /// Child opc_LnCorredores where [LnCorredores].[LinhaId] point to this entity (LnCorredores_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnCorredore> opc_LnCorredores { get; set; } // LnCorredores.LnCorredores_linha
        /// <summary>
        /// Child opc_LnPesquisas where [LnPesquisas].[LinhaId] point to this entity (LnPesquisas_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnPesquisa> opc_LnPesquisas { get; set; } // LnPesquisas.LnPesquisas_linha
        /// <summary>
        /// Child opc_LnTerminais where [LnTerminais].[LinhaId] point to this entity (LnTerminais_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnTerminai> opc_LnTerminais { get; set; } // LnTerminais.LnTerminais_linha
        /// <summary>
        /// Child opc_LnTroncoes where [LnTroncos].[LinhaId] point to this entity (LnTroncos_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnTronco> opc_LnTroncoes { get; set; } // LnTroncos.LnTroncos_linha
        /// <summary>
        /// Child opc_Ofertas where [Ofertas].[LinhaId] point to this entity (Ofertas_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Oferta> opc_Ofertas { get; set; } // Ofertas.Ofertas_linha
        /// <summary>
        /// Child opc_PrLinhas where [PrLinhas].[LinhaId] point to this entity (PrLinhas_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PrLinha> opc_PrLinhas { get; set; } // PrLinhas.PrLinhas_linha
        /// <summary>
        /// Child opc_PtLinhas where [PtLinhas].[LinhaId] point to this entity (PtLinhas_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtLinha> opc_PtLinhas { get; set; } // PtLinhas.PtLinhas_linha
        /// <summary>
        /// Child opc_Renovacaos where [Renovacao].[LinhaId] point to this entity (Renovacao_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Renovacao> opc_Renovacaos { get; set; } // Renovacao.Renovacao_linha

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Linhas].([EmpresaId]) (Linhas_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Linhas_empresa

        /// <summary>
        /// Parent opc_CLinha pointed by [Linhas].([Classificacao]) (Linhas_classificacao)
        /// </summary>
        public virtual opc_CLinha opc_CLinha { get; set; } // Linhas_classificacao

        /// <summary>
        /// Parent opc_EDominio pointed by [Linhas].([DominioId]) (Linhas_dominio)
        /// </summary>
        public virtual opc_EDominio opc_EDominio { get; set; } // Linhas_dominio

        /// <summary>
        /// Parent opc_Operaco pointed by [Linhas].([OperacaoId]) (Linhas_operacao)
        /// </summary>
        public virtual opc_Operaco opc_Operaco { get; set; } // Linhas_operacao

        public opc_Linha()
        {
            Cadastro = System.DateTime.Now;
            opc_Atendimentoes = new System.Collections.Generic.List<opc_Atendimento>();
            opc_Horarios = new System.Collections.Generic.List<opc_Horario>();
            opc_Itinerarios = new System.Collections.Generic.List<opc_Itinerario>();
            opc_LnCorredores = new System.Collections.Generic.List<opc_LnCorredore>();
            opc_LnPesquisas = new System.Collections.Generic.List<opc_LnPesquisa>();
            opc_LnTerminais = new System.Collections.Generic.List<opc_LnTerminai>();
            opc_LnTroncoes = new System.Collections.Generic.List<opc_LnTronco>();
            opc_Ofertas = new System.Collections.Generic.List<opc_Oferta>();
            opc_PrLinhas = new System.Collections.Generic.List<opc_PrLinha>();
            opc_PtLinhas = new System.Collections.Generic.List<opc_PtLinha>();
            opc_Renovacaos = new System.Collections.Generic.List<opc_Renovacao>();
        }
    }

    // LnCorredores
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnCorredore
    {
        public int Id { get; set; } // Id (Primary key)
        public int CorredorId { get; set; } // CorredorId
        public int LinhaId { get; set; } // LinhaId
        public string Sentido { get; set; } // Sentido (length: 2)
        public decimal? Extensao { get; set; } // Extensao
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Corredore pointed by [LnCorredores].([CorredorId]) (LnCorredores_corredor)
        /// </summary>
        public virtual opc_Corredore opc_Corredore { get; set; } // LnCorredores_corredor

        /// <summary>
        /// Parent opc_Linha pointed by [LnCorredores].([LinhaId]) (LnCorredores_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // LnCorredores_linha

        public opc_LnCorredore()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // LnPesquisas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnPesquisa
    {
        public int Id { get; set; } // Id (Primary key)
        public int PesquisaId { get; set; } // PesquisaId
        public int LinhaId { get; set; } // LinhaId
        public bool Uteis { get; set; } // Uteis
        public bool Sabados { get; set; } // Sabados
        public bool Domingos { get; set; } // Domingos
        public string Responsavel { get; set; } // Responsavel (length: 64)
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Viagens where [Viagens].[LinhaId] point to this entity (Viagens_linha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Viagen> opc_Viagens { get; set; } // Viagens.Viagens_linha

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [LnPesquisas].([LinhaId]) (LnPesquisas_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // LnPesquisas_linha

        /// <summary>
        /// Parent opc_Pesquisa pointed by [LnPesquisas].([PesquisaId]) (LnPesquisas_pesquisa)
        /// </summary>
        public virtual opc_Pesquisa opc_Pesquisa { get; set; } // LnPesquisas_pesquisa

        public opc_LnPesquisa()
        {
            Cadastro = System.DateTime.Now;
            opc_Viagens = new System.Collections.Generic.List<opc_Viagen>();
        }
    }

    // LnTerminais
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnTerminai
    {
        public int Id { get; set; } // Id (Primary key)
        public int TerminalId { get; set; } // TerminalId
        public int LinhaId { get; set; } // LinhaId
        public bool Uteis { get; set; } // Uteis
        public int? UteisFluxo { get; set; } // UteisFluxo
        public bool Sabados { get; set; } // Sabados
        public int? SabadosFluxo { get; set; } // SabadosFluxo
        public bool Domingos { get; set; } // Domingos
        public int? DomingosFluxo { get; set; } // DomingosFluxo
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [LnTerminais].([LinhaId]) (LnTerminais_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // LnTerminais_linha

        /// <summary>
        /// Parent opc_Terminai pointed by [LnTerminais].([TerminalId]) (LnTerminais_terminal)
        /// </summary>
        public virtual opc_Terminai opc_Terminai { get; set; } // LnTerminais_terminal

        public opc_LnTerminai()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // LnTroncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnTronco
    {
        public int Id { get; set; } // Id (Primary key)
        public int TroncoId { get; set; } // TroncoId
        public int LinhaId { get; set; } // LinhaId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [LnTroncos].([LinhaId]) (LnTroncos_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // LnTroncos_linha

        /// <summary>
        /// Parent opc_Tronco pointed by [LnTroncos].([TroncoId]) (LnTroncos_tronco)
        /// </summary>
        public virtual opc_Tronco opc_Tronco { get; set; } // LnTroncos_tronco

        public opc_LnTronco()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // Lotacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Lotaco
    {
        public int ClasseId { get; set; } // ClasseId (Primary key)
        public string Classe { get; set; } // Classe (Primary key) (length: 32)
        public int OcupacaoId { get; set; } // OcupacaoId (Primary key)
        public string Denominacao { get; set; } // Denominacao (Primary key) (length: 32)
        public int? Lotacao { get; set; } // Lotacao
    }

    // Motores
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Motore
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Classificacao { get; set; } // Classificacao (length: 64)
        public string Descricao { get; set; } // Descricao (length: 256)

        // Reverse navigation

        /// <summary>
        /// Child opc_Chassis where [Chassis].[MotorId] point to this entity (Chassis_motor)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Chassis> opc_Chassis { get; set; } // Chassis.Chassis_motor

        public opc_Motore()
        {
            opc_Chassis = new System.Collections.Generic.List<opc_Chassis>();
        }
    }

    // Ocupacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Ocupaco
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 32)
        public string Nivel { get; set; } // Nivel (length: 4)
        public decimal Densidade { get; set; } // Densidade

        // Reverse navigation

        /// <summary>
        /// Child opc_PrLinhas where [PrLinhas].[OcupacaoId] point to this entity (PrLinhas_ocupacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PrLinha> opc_PrLinhas { get; set; } // PrLinhas.PrLinhas_ocupacao

        public opc_Ocupaco()
        {
            opc_PrLinhas = new System.Collections.Generic.List<opc_PrLinha>();
        }
    }

    // Ofertas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Oferta
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public int Ano { get; set; } // Ano
        public int Mes { get; set; } // Mes
        public int Categoria { get; set; } // Categoria
        public int Passageiros { get; set; } // Passageiros
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [Ofertas].([LinhaId]) (Ofertas_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // Ofertas_linha

        /// <summary>
        /// Parent opc_TCategoria pointed by [Ofertas].([Categoria]) (Ofertas_categoria)
        /// </summary>
        public virtual opc_TCategoria opc_TCategoria { get; set; } // Ofertas_categoria

        public opc_Oferta()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // Operacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Operaco
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public int OperLinhaId { get; set; } // OperLinhaId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Linhas where [Linhas].[OperacaoId] point to this entity (Linhas_operacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Linha> opc_Linhas { get; set; } // Linhas.Linhas_operacao
        /// <summary>
        /// Child opc_Pesquisas where [Pesquisas].[OperacaoId] point to this entity (Pesquisas_operacao)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas.Pesquisas_operacao

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Operacoes].([EmpresaId]) (Operacoes_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Operacoes_empresa

        /// <summary>
        /// Parent OperLinha pointed by [Operacoes].([OperLinhaId]) (Operacoes_operlinha)
        /// </summary>
        public virtual OperLinha OperLinha { get; set; } // Operacoes_operlinha

        public opc_Operaco()
        {
            Cadastro = System.DateTime.Now;
            opc_Linhas = new System.Collections.Generic.List<opc_Linha>();
            opc_Pesquisas = new System.Collections.Generic.List<opc_Pesquisa>();
        }
    }

    // Pesquisas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Pesquisa
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Identificacao { get; set; } // Identificacao (length: 64)
        public System.DateTime Inicio { get; set; } // Inicio
        public System.DateTime Termino { get; set; } // Termino
        public int? TerminalId { get; set; } // TerminalId
        public int? TroncoId { get; set; } // TroncoId
        public int? CorredorId { get; set; } // CorredorId
        public int? OperacaoId { get; set; } // OperacaoId
        public int? Classificacao { get; set; } // Classificacao
        public bool Interna { get; set; } // Interna
        public string Fornecedor { get; set; } // Fornecedor (length: 64)
        public string Contrato { get; set; } // Contrato (length: 32)
        public bool Uteis { get; set; } // Uteis
        public bool Sabados { get; set; } // Sabados
        public bool Domingos { get; set; } // Domingos
        public string Responsavel { get; set; } // Responsavel (length: 64)
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_LnPesquisas where [LnPesquisas].[PesquisaId] point to this entity (LnPesquisas_pesquisa)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnPesquisa> opc_LnPesquisas { get; set; } // LnPesquisas.LnPesquisas_pesquisa

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Pesquisas].([EmpresaId]) (Pesquisas_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Pesquisas_empresa

        /// <summary>
        /// Parent opc_CLinha pointed by [Pesquisas].([Classificacao]) (Pesquisas_classificacao)
        /// </summary>
        public virtual opc_CLinha opc_CLinha { get; set; } // Pesquisas_classificacao

        /// <summary>
        /// Parent opc_Corredore pointed by [Pesquisas].([CorredorId]) (Pesquisas_corredor)
        /// </summary>
        public virtual opc_Corredore opc_Corredore { get; set; } // Pesquisas_corredor

        /// <summary>
        /// Parent opc_Operaco pointed by [Pesquisas].([OperacaoId]) (Pesquisas_operacao)
        /// </summary>
        public virtual opc_Operaco opc_Operaco { get; set; } // Pesquisas_operacao

        /// <summary>
        /// Parent opc_Terminai pointed by [Pesquisas].([TerminalId]) (Pesquisas_terminal)
        /// </summary>
        public virtual opc_Terminai opc_Terminai { get; set; } // Pesquisas_terminal

        /// <summary>
        /// Parent opc_Tronco pointed by [Pesquisas].([TroncoId]) (Pesquisas_tronco)
        /// </summary>
        public virtual opc_Tronco opc_Tronco { get; set; } // Pesquisas_tronco

        public opc_Pesquisa()
        {
            Cadastro = System.DateTime.Now;
            opc_LnPesquisas = new System.Collections.Generic.List<opc_LnPesquisa>();
        }
    }

    // Pontos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Ponto
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Prefixo { get; set; } // Prefixo (length: 16)
        public string Identificacao { get; set; } // Identificacao (length: 32)
        public string Endereco { get; set; } // Endereco (length: 128)
        public string EnderecoRef { get; set; } // EnderecoRef (length: 64)
        public int? Cep { get; set; } // Cep
        public string Bairro { get; set; } // Bairro (length: 32)
        public string Municipio { get; set; } // Municipio (length: 32)
        public string UfId { get; set; } // UfId (length: 2)
        public bool Intercambio { get; set; } // Intercambio
        public decimal? Latitude { get; set; } // Latitude
        public decimal? Longitude { get; set; } // Longitude
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_PtAtendimentoes where [PtAtendimentos].[PontoId] point to this entity (PtAtendimentos_ponto)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtAtendimento> opc_PtAtendimentoes { get; set; } // PtAtendimentos.PtAtendimentos_ponto
        /// <summary>
        /// Child opc_PtLinhas where [PtLinhas].[PontoId] point to this entity (PtLinhas_ponto)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtLinha> opc_PtLinhas { get; set; } // PtLinhas.PtLinhas_ponto
        /// <summary>
        /// Child opc_PtTroncoes where [PtTroncos].[PontoId] point to this entity (PtTroncos_ponto)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtTronco> opc_PtTroncoes { get; set; } // PtTroncos.PtTroncos_ponto

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Pontos].([EmpresaId]) (Pontos_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Pontos_empresa

        public opc_Ponto()
        {
            Cadastro = System.DateTime.Now;
            opc_PtAtendimentoes = new System.Collections.Generic.List<opc_PtAtendimento>();
            opc_PtLinhas = new System.Collections.Generic.List<opc_PtLinha>();
            opc_PtTroncoes = new System.Collections.Generic.List<opc_PtTronco>();
        }
    }

    // pontos_repetidos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PontosRepetido
    {
        public int EmpresaId { get; set; } // EmpresaId (Primary key)
        public string Prefixo { get; set; } // Prefixo (Primary key) (length: 16)
        public string Identificacao { get; set; } // Identificacao (Primary key) (length: 32)
        public int? Ocorrencias { get; set; } // Ocorrencias
    }

    // PrLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PrLinha
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public int PeriodoId { get; set; } // PeriodoId
        public int DiaId { get; set; } // DiaId
        public System.TimeSpan Inicio { get; set; } // Inicio
        public System.TimeSpan Termino { get; set; } // Termino
        public int? CicloAb { get; set; } // CicloAB
        public int? CicloBa { get; set; } // CicloBA
        public int? CVeiculoId { get; set; } // CVeiculoId
        public int? OcupacaoId { get; set; } // OcupacaoId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_CVeiculo pointed by [PrLinhas].([CVeiculoId]) (PrLinhas_cveiculo)
        /// </summary>
        public virtual opc_CVeiculo opc_CVeiculo { get; set; } // PrLinhas_cveiculo

        /// <summary>
        /// Parent opc_EPeriodo pointed by [PrLinhas].([PeriodoId]) (PrLinhas_periodo)
        /// </summary>
        public virtual opc_EPeriodo opc_EPeriodo { get; set; } // PrLinhas_periodo

        /// <summary>
        /// Parent opc_Linha pointed by [PrLinhas].([LinhaId]) (PrLinhas_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // PrLinhas_linha

        /// <summary>
        /// Parent opc_Ocupaco pointed by [PrLinhas].([OcupacaoId]) (PrLinhas_ocupacao)
        /// </summary>
        public virtual opc_Ocupaco opc_Ocupaco { get; set; } // PrLinhas_ocupacao

        public opc_PrLinha()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // PtAtendimentos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtAtendimento
    {
        public int Id { get; set; } // Id (Primary key)
        public int AtendimentoId { get; set; } // AtendimentoId
        public string Sentido { get; set; } // Sentido (length: 2)
        public int PontoId { get; set; } // PontoId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Atendimento pointed by [PtAtendimentos].([AtendimentoId]) (PtAtendimentos_atendimento)
        /// </summary>
        public virtual opc_Atendimento opc_Atendimento { get; set; } // PtAtendimentos_atendimento

        /// <summary>
        /// Parent opc_Ponto pointed by [PtAtendimentos].([PontoId]) (PtAtendimentos_ponto)
        /// </summary>
        public virtual opc_Ponto opc_Ponto { get; set; } // PtAtendimentos_ponto

        public opc_PtAtendimento()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // PtDestino
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtDestino
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId (Primary key)
        public string Sentido { get; set; } // Sentido (Primary key) (length: 2)
        public int PontoId { get; set; } // PontoId (Primary key)
        public string Prefixo { get; set; } // Prefixo (Primary key) (length: 16)
        public string Identificacao { get; set; } // Identificacao (Primary key) (length: 32)
    }

    // PTipicos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PTipico
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId (Primary key)
        public string Denominacao { get; set; } // Denominacao (Primary key) (length: 32)
        public int DiaId { get; set; } // DiaId (Primary key)
        public System.TimeSpan Inicio { get; set; } // Inicio (Primary key)
        public System.TimeSpan Termino { get; set; } // Termino (Primary key)
        public int? PInicio { get; set; } // pInicio
        public int? PTermino { get; set; } // pTermino
        public int? Duracao { get; set; } // Duracao
        public int? Lotacao { get; set; } // Lotacao
        public int? CicloAb { get; set; } // CicloAB
        public int? CicloBa { get; set; } // CicloBA
    }

    // PtLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtLinha
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public string Sentido { get; set; } // Sentido (length: 2)
        public int PontoId { get; set; } // PontoId
        public int? OrigemId { get; set; } // OrigemId
        public int? DestinoId { get; set; } // DestinoId
        public int? Fluxo { get; set; } // Fluxo
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_FViagens where [FViagens].[PontoId] point to this entity (FViagens_ponto)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_FViagen> opc_FViagens { get; set; } // FViagens.FViagens_ponto
        /// <summary>
        /// Child opc_PtLinhas where [PtLinhas].[DestinoId] point to this entity (PtLinhas_destino)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtLinha> opc_PtLinhas_DestinoId { get; set; } // PtLinhas.PtLinhas_destino
        /// <summary>
        /// Child opc_PtLinhas where [PtLinhas].[OrigemId] point to this entity (PtLinhas_origem)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtLinha> opc_PtLinhas_OrigemId { get; set; } // PtLinhas.PtLinhas_origem
        /// <summary>
        /// Child opc_Viagens where [Viagens].[PontoId] point to this entity (Viagens_ponto)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Viagen> opc_Viagens { get; set; } // Viagens.Viagens_ponto

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [PtLinhas].([LinhaId]) (PtLinhas_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // PtLinhas_linha

        /// <summary>
        /// Parent opc_Ponto pointed by [PtLinhas].([PontoId]) (PtLinhas_ponto)
        /// </summary>
        public virtual opc_Ponto opc_Ponto { get; set; } // PtLinhas_ponto

        /// <summary>
        /// Parent opc_PtLinha pointed by [PtLinhas].([DestinoId]) (PtLinhas_destino)
        /// </summary>
        public virtual opc_PtLinha Destino { get; set; } // PtLinhas_destino

        /// <summary>
        /// Parent opc_PtLinha pointed by [PtLinhas].([OrigemId]) (PtLinhas_origem)
        /// </summary>
        public virtual opc_PtLinha opc_PtLinha_OrigemId { get; set; } // PtLinhas_origem

        public opc_PtLinha()
        {
            Cadastro = System.DateTime.Now;
            opc_FViagens = new System.Collections.Generic.List<opc_FViagen>();
            opc_PtLinhas_DestinoId = new System.Collections.Generic.List<opc_PtLinha>();
            opc_PtLinhas_OrigemId = new System.Collections.Generic.List<opc_PtLinha>();
            opc_Viagens = new System.Collections.Generic.List<opc_Viagen>();
        }
    }

    // PtOrigem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtOrigem
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId (Primary key)
        public string Sentido { get; set; } // Sentido (Primary key) (length: 2)
        public int PontoId { get; set; } // PontoId (Primary key)
        public string Prefixo { get; set; } // Prefixo (Primary key) (length: 16)
        public string Identificacao { get; set; } // Identificacao (Primary key) (length: 32)
    }

    // PtTroncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtTronco
    {
        public int Id { get; set; } // Id (Primary key)
        public int TroncoId { get; set; } // TroncoId
        public string Sentido { get; set; } // Sentido (length: 2)
        public int PontoId { get; set; } // PontoId
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Ponto pointed by [PtTroncos].([PontoId]) (PtTroncos_ponto)
        /// </summary>
        public virtual opc_Ponto opc_Ponto { get; set; } // PtTroncos_ponto

        /// <summary>
        /// Parent opc_Tronco pointed by [PtTroncos].([TroncoId]) (PtTroncos_tronco)
        /// </summary>
        public virtual opc_Tronco opc_Tronco { get; set; } // PtTroncos_tronco

        public opc_PtTronco()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // Renovacao
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Renovacao
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public int Ano { get; set; } // Ano
        public int Mes { get; set; } // Mes
        public int? DiaId { get; set; } // DiaId
        public decimal Indice { get; set; } // Indice
        public System.DateTime? Referencia { get; private set; } // Referencia
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Foreign keys

        /// <summary>
        /// Parent opc_Linha pointed by [Renovacao].([LinhaId]) (Renovacao_linha)
        /// </summary>
        public virtual opc_Linha opc_Linha { get; set; } // Renovacao_linha

        public opc_Renovacao()
        {
            Cadastro = System.DateTime.Now;
        }
    }

    // Sinotico
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Sinotico
    {
        public int LinhaId { get; set; } // LinhaId (Primary key)
        public int? DiaId { get; set; } // DiaId
        public string Sentido { get; set; } // Sentido (Primary key) (length: 2)
        public int SinoticoId { get; set; } // SinoticoId (Primary key)
    }

    // Tarifas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Tarifa
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public System.DateTime Referencia { get; set; } // Referencia
        public decimal Valor { get; set; } // Valor
        public string Decreto { get; set; } // Decreto (length: 128)

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Tarifas].([EmpresaId]) (Tarifas_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Tarifas_empresa
    }

    // TarifaMod
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TarifaMod
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId (Primary key)
        public string Denominacao { get; set; } // Denominacao (Primary key) (length: 32)
        public bool Gratuidade { get; set; } // Gratuidade (Primary key)
        public decimal? Rateio { get; set; } // Rateio
        public decimal? Tarifa { get; set; } // Tarifa
        public System.DateTime? Cadastro { get; set; } // Cadastro
    }

    // TCategorias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TCategoria
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Denominacao { get; set; } // Denominacao (length: 32)
        public bool Gratuidade { get; set; } // Gratuidade
        public decimal? Rateio { get; set; } // Rateio
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_Ofertas where [Ofertas].[Categoria] point to this entity (Ofertas_categoria)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Oferta> opc_Ofertas { get; set; } // Ofertas.Ofertas_categoria

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [TCategorias].([EmpresaId]) (TCategorias_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // TCategorias_empresa

        public opc_TCategoria()
        {
            Cadastro = System.DateTime.Now;
            opc_Ofertas = new System.Collections.Generic.List<opc_Oferta>();
        }
    }

    // Terminais
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Terminai
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Prefixo { get; set; } // Prefixo (length: 16)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Cnpj { get; set; } // Cnpj (length: 32)
        public string IEstadual { get; set; } // IEstadual (length: 16)
        public string IMunicipal { get; set; } // IMunicipal (length: 16)
        public string Endereco { get; set; } // Endereco (length: 128)
        public string EnderecoNo { get; set; } // EnderecoNo (length: 8)
        public string Complemento { get; set; } // Complemento (length: 64)
        public int? Cep { get; set; } // Cep
        public string Bairro { get; set; } // Bairro (length: 32)
        public string Municipio { get; set; } // Municipio (length: 32)
        public string UfId { get; set; } // UfId (length: 2)
        public string Telefone { get; set; } // Telefone (length: 32)
        public string Email { get; set; } // Email (length: 256)
        public System.TimeSpan? Inicio { get; set; } // Inicio
        public System.TimeSpan? Termino { get; set; } // Termino
        public decimal? Latitude { get; set; } // Latitude
        public decimal? Longitude { get; set; } // Longitude
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_LnTerminais where [LnTerminais].[TerminalId] point to this entity (LnTerminais_terminal)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnTerminai> opc_LnTerminais { get; set; } // LnTerminais.LnTerminais_terminal
        /// <summary>
        /// Child opc_Pesquisas where [Pesquisas].[TerminalId] point to this entity (Pesquisas_terminal)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas.Pesquisas_terminal
        /// <summary>
        /// Child opc_TServicoes where [TServicos].[TerminalId] point to this entity (TServicos_terminal)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_TServico> opc_TServicoes { get; set; } // TServicos.TServicos_terminal

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Terminais].([EmpresaId]) (Terminais_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Terminais_empresa

        public opc_Terminai()
        {
            Cadastro = System.DateTime.Now;
            opc_LnTerminais = new System.Collections.Generic.List<opc_LnTerminai>();
            opc_Pesquisas = new System.Collections.Generic.List<opc_Pesquisa>();
            opc_TServicoes = new System.Collections.Generic.List<opc_TServico>();
        }
    }

    // TotalViagens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TotalViagen
    {
        public int LinhaId { get; set; } // LinhaId (Primary key)
        public int DiaId { get; set; } // DiaId (Primary key)
        public string Sentido { get; set; } // Sentido (Primary key) (length: 2)
        public int? Total { get; set; } // Total
        public decimal? KmDia { get; set; } // KmDia
        public decimal? KmSemana { get; set; } // KmSemana
        public decimal? KmMes { get; set; } // KmMes
    }

    // Troncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Tronco
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Prefixo { get; set; } // Prefixo (length: 16)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public decimal? ExtensaoAb { get; set; } // ExtensaoAB
        public decimal? ExtensaoBa { get; set; } // ExtensaoBA
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_ItTroncoes where [ItTroncos].[TroncoId] point to this entity (ItTroncos_tronco)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_ItTronco> opc_ItTroncoes { get; set; } // ItTroncos.ItTroncos_tronco
        /// <summary>
        /// Child opc_LnTroncoes where [LnTroncos].[TroncoId] point to this entity (LnTroncos_tronco)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_LnTronco> opc_LnTroncoes { get; set; } // LnTroncos.LnTroncos_tronco
        /// <summary>
        /// Child opc_Pesquisas where [Pesquisas].[TroncoId] point to this entity (Pesquisas_tronco)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Pesquisa> opc_Pesquisas { get; set; } // Pesquisas.Pesquisas_tronco
        /// <summary>
        /// Child opc_PtTroncoes where [PtTroncos].[TroncoId] point to this entity (PtTroncos_tronco)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_PtTronco> opc_PtTroncoes { get; set; } // PtTroncos.PtTroncos_tronco

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Troncos].([EmpresaId]) (Troncos_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Troncos_empresa

        public opc_Tronco()
        {
            Cadastro = System.DateTime.Now;
            opc_ItTroncoes = new System.Collections.Generic.List<opc_ItTronco>();
            opc_LnTroncoes = new System.Collections.Generic.List<opc_LnTronco>();
            opc_Pesquisas = new System.Collections.Generic.List<opc_Pesquisa>();
            opc_PtTroncoes = new System.Collections.Generic.List<opc_PtTronco>();
        }
    }

    // TServicos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TServico
    {
        public int Id { get; set; } // Id (Primary key)
        public int TerminalId { get; set; } // TerminalId
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Descricao { get; set; } // Descricao (length: 256)
        public System.TimeSpan? Inicio { get; set; } // Inicio
        public System.TimeSpan? Termino { get; set; } // Termino

        // Foreign keys

        /// <summary>
        /// Parent opc_Terminai pointed by [TServicos].([TerminalId]) (TServicos_terminal)
        /// </summary>
        public virtual opc_Terminai opc_Terminai { get; set; } // TServicos_terminal
    }

    // Veiculos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Veiculo
    {
        public int Id { get; set; } // Id (Primary key)
        public int EmpresaId { get; set; } // EmpresaId
        public string Numero { get; set; } // Numero (length: 16)
        public string Cor { get; set; } // Cor (length: 32)
        public int Classe { get; set; } // Classe
        public string Placa { get; set; } // Placa (length: 16)
        public string Renavam { get; set; } // Renavam (length: 16)
        public string Antt { get; set; } // Antt (length: 16)
        public System.DateTime? Inicio { get; set; } // Inicio
        public bool Inativo { get; set; } // Inativo
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) opc_Veiculo pointed by [Carrocerias].[VeiculoId] (Carrocerias_veiculo)
        /// </summary>
        public virtual opc_Carroceria opc_Carroceria { get; set; } // Carrocerias.Carrocerias_veiculo
        /// <summary>
        /// Parent (One-to-One) opc_Veiculo pointed by [Chassis].[VeiculoId] (Chassis_veiculo)
        /// </summary>
        public virtual opc_Chassis opc_Chassis { get; set; } // Chassis.Chassis_veiculo
        /// <summary>
        /// Child opc_Viagens where [Viagens].[VeiculoId] point to this entity (Viagens_veiculo)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Viagen> opc_Viagens { get; set; } // Viagens.Viagens_veiculo

        // Foreign keys

        /// <summary>
        /// Parent Empresa pointed by [Veiculos].([EmpresaId]) (Veiculos_empresa)
        /// </summary>
        public virtual Empresa Empresa { get; set; } // Veiculos_empresa

        /// <summary>
        /// Parent opc_CVeiculo pointed by [Veiculos].([Classe]) (Veiculos_classe)
        /// </summary>
        public virtual opc_CVeiculo opc_CVeiculo { get; set; } // Veiculos_classe

        public opc_Veiculo()
        {
            Inativo = false;
            Cadastro = System.DateTime.Now;
            opc_Viagens = new System.Collections.Generic.List<opc_Viagen>();
        }
    }

    // VeiculosAtt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_VeiculosAtt
    {
        public int Id { get; set; } // Id (Primary key)
        public int Classe { get; set; } // Classe
        public int Attributo { get; set; } // Attributo
        public string Conteudo { get; set; } // Conteudo (length: 512)

        // Foreign keys

        /// <summary>
        /// Parent opc_CVeiculo pointed by [VeiculosAtt].([Classe]) (VeiculosAtt_classe)
        /// </summary>
        public virtual opc_CVeiculo opc_CVeiculo { get; set; } // VeiculosAtt_classe

        /// <summary>
        /// Parent opc_CVeiculosAtt pointed by [VeiculosAtt].([Attributo]) (VeiculosAtt_atributo)
        /// </summary>
        public virtual opc_CVeiculosAtt opc_CVeiculosAtt { get; set; } // VeiculosAtt_atributo
    }

    // Vias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Via
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 64)

        // Reverse navigation

        /// <summary>
        /// Child opc_AAbasteces where [AAbastece].[PavimentoId] point to this entity (AAbastece_pavimento)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_AAbastece> opc_AAbasteces { get; set; } // AAbastece.AAbastece_pavimento
        /// <summary>
        /// Child opc_ItAtendimentoes where [ItAtendimentos].[PavimentoId] point to this entity (ItAtendimentos_pavimento)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_ItAtendimento> opc_ItAtendimentoes { get; set; } // ItAtendimentos.ItAtendimentos_pavimento
        /// <summary>
        /// Child opc_Itinerarios where [Itinerarios].[PavimentoId] point to this entity (Itinerarios_pavimento)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Itinerario> opc_Itinerarios { get; set; } // Itinerarios.Itinerarios_pavimento
        /// <summary>
        /// Child opc_ItTroncoes where [ItTroncos].[PavimentoId] point to this entity (ItTroncos_pavimento)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_ItTronco> opc_ItTroncoes { get; set; } // ItTroncos.ItTroncos_pavimento

        public opc_Via()
        {
            opc_AAbasteces = new System.Collections.Generic.List<opc_AAbastece>();
            opc_ItAtendimentoes = new System.Collections.Generic.List<opc_ItAtendimento>();
            opc_Itinerarios = new System.Collections.Generic.List<opc_Itinerario>();
            opc_ItTroncoes = new System.Collections.Generic.List<opc_ItTronco>();
        }
    }

    // Viagens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_Viagen
    {
        public int Id { get; set; } // Id (Primary key)
        public int LinhaId { get; set; } // LinhaId
        public int? Item { get; set; } // Item
        public System.DateTime Data { get; set; } // Data
        public string Sentido { get; set; } // Sentido (length: 2)
        public int? HorarioId { get; set; } // HorarioId
        public int? PontoId { get; set; } // PontoId
        public int? VeiculoId { get; set; } // VeiculoId
        public System.TimeSpan? Chegada { get; set; } // Chegada
        public System.TimeSpan Inicio { get; set; } // Inicio
        public System.TimeSpan? Termino { get; set; } // Termino
        public int? Passageiros { get; set; } // Passageiros
        public int? Inicial { get; set; } // Inicial
        public int? Final { get; set; } // Final
        public string Responsavel { get; set; } // Responsavel (length: 32)
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child opc_FViagens where [FViagens].[ViagemId] point to this entity (FViagens_viagem)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_FViagen> opc_FViagens { get; set; } // FViagens.FViagens_viagem

        // Foreign keys

        /// <summary>
        /// Parent opc_Horario pointed by [Viagens].([HorarioId]) (Viagens_horario)
        /// </summary>
        public virtual opc_Horario opc_Horario { get; set; } // Viagens_horario

        /// <summary>
        /// Parent opc_LnPesquisa pointed by [Viagens].([LinhaId]) (Viagens_linha)
        /// </summary>
        public virtual opc_LnPesquisa opc_LnPesquisa { get; set; } // Viagens_linha

        /// <summary>
        /// Parent opc_PtLinha pointed by [Viagens].([PontoId]) (Viagens_ponto)
        /// </summary>
        public virtual opc_PtLinha opc_PtLinha { get; set; } // Viagens_ponto

        /// <summary>
        /// Parent opc_Veiculo pointed by [Viagens].([VeiculoId]) (Viagens_veiculo)
        /// </summary>
        public virtual opc_Veiculo opc_Veiculo { get; set; } // Viagens_veiculo

        public opc_Viagen()
        {
            Cadastro = System.DateTime.Now;
            opc_FViagens = new System.Collections.Generic.List<opc_FViagen>();
        }
    }

    // OperLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class OperLinha
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 64)
        public string Descricao { get; set; } // Descricao (length: 512)

        // Reverse navigation

        /// <summary>
        /// Child opc_Operacoes where [Operacoes].[OperLinhaId] point to this entity (Operacoes_operlinha)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_Operaco> opc_Operacoes { get; set; } // Operacoes.Operacoes_operlinha

        public OperLinha()
        {
            opc_Operacoes = new System.Collections.Generic.List<opc_Operaco>();
        }
    }

    // Paises
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Pais
    {
        public string Id { get; set; } // Id (Primary key) (length: 8)
        public string Nome { get; set; } // Nome (length: 64)
        public string Capital { get; set; } // Capital (length: 32)
        public string Continente { get; set; } // Continente (length: 32)

        // Reverse navigation

        /// <summary>
        /// Child Empresas where [Empresas].[PaisId] point to this entity (Empresas_pais)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Empresa> Empresas { get; set; } // Empresas.Empresas_pais

        public Pais()
        {
            Empresas = new System.Collections.Generic.List<Empresa>();
        }
    }

    // Periodos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Periodo
    {
        public int Id { get; set; } // Id (Primary key)
        public string Denominacao { get; set; } // Denominacao (length: 32)

        // Reverse navigation

        /// <summary>
        /// Child opc_EPeriodoes where [EPeriodos].[PeriodoId] point to this entity (EPeriodos_periodo)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<opc_EPeriodo> opc_EPeriodoes { get; set; } // EPeriodos.EPeriodos_periodo

        public Periodo()
        {
            opc_EPeriodoes = new System.Collections.Generic.List<opc_EPeriodo>();
        }
    }

    // vis_pontos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class temp_VisPonto
    {
        public int? EmpresaId { get; set; } // EmpresaId
        public string Empresa { get; set; } // Empresa (length: 50)
        public string Prefixo { get; set; } // Prefixo (length: 20)
        public string Identificação { get; set; } // Identificação (length: 20)
        public string Endereço { get; set; } // Endereço (length: 67)
        public string Referência { get; set; } // Referência (length: 50)
        public string Cep { get; set; } // CEP (length: 20)
        public string Bairro { get; set; } // Bairro (length: 20)
        public string Munícipio { get; set; } // Munícipio (length: 50)
        public string Uf { get; set; } // UF (length: 50)
        public string PontoTroca63 { get; set; } // Ponto Troca? (length: 20)
        public decimal? Latitude { get; set; } // Latitude
        public decimal? Longitude { get; set; } // Longitude
        public int Id { get; set; } // Id (Primary key)
    }

    // Ufs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Uf
    {
        public int Id { get; set; } // Id (Primary key)
        public string Sigla { get; set; } // Sigla (length: 2)
        public string Estado { get; set; } // Estado (length: 32)
        public string Capital { get; set; } // Capital (length: 32)
        public string Regiao { get; set; } // Regiao (length: 16)

        // Reverse navigation

        /// <summary>
        /// Child Cidades where [Cidades].[UfId] point to this entity (Cidades_uf)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Cidade> Cidades { get; set; } // Cidades.Cidades_uf

        public Uf()
        {
            Cidades = new System.Collections.Generic.List<Cidade>();
        }
    }

    // Usuarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class Usuario
    {
        public int Id { get; set; } // Id (Primary key)
        public string Nome { get; set; } // Nome (length: 64)
        public string Login { get; set; } // Login (length: 256)
        public string Senha { get; set; } // Senha (length: 256)
        public int Perfil { get; set; } // Perfil
        public bool Ativo { get; set; } // Ativo
        public System.DateTime? Cadastro { get; set; } // Cadastro

        // Reverse navigation

        /// <summary>
        /// Child EUsuarios where [EUsuarios].[UsuarioId] point to this entity (EUsuarios_usuario)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EUsuario> EUsuarios { get; set; } // EUsuarios.EUsuarios_usuario

        public Usuario()
        {
            Perfil = 2;
            Cadastro = System.DateTime.Now;
            EUsuarios = new System.Collections.Generic.List<EUsuario>();
        }
    }

    #endregion

    #region POCO Configuration

    // Cidades
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class CidadeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cidade>
    {
        public CidadeConfiguration()
            : this("dbo")
        {
        }

        public CidadeConfiguration(string schema)
        {
            ToTable("Cidades", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.UfId).HasColumnName(@"UfId").HasColumnType("int").IsRequired();
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);

            // Foreign keys
            HasRequired(a => a.Uf).WithMany(b => b.Cidades).HasForeignKey(c => c.UfId).WillCascadeOnDelete(false); // Cidades_uf
        }
    }

    // ClassLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class ClassLinhaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClassLinha>
    {
        public ClassLinhaConfiguration()
            : this("dbo")
        {
        }

        public ClassLinhaConfiguration(string schema)
        {
            ToTable("ClassLinhas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Descricao).HasColumnName(@"Descricao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // Dominios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class DominioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Dominio>
    {
        public DominioConfiguration()
            : this("dbo")
        {
        }

        public DominioConfiguration(string schema)
        {
            ToTable("Dominios", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Descricao).HasColumnName(@"Descricao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
        }
    }

    // Empresas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class EmpresaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Empresa>
    {
        public EmpresaConfiguration()
            : this("dbo")
        {
        }

        public EmpresaConfiguration(string schema)
        {
            ToTable("Empresas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Razao).HasColumnName(@"Razao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Fantasia).HasColumnName(@"Fantasia").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cnpj).HasColumnName(@"Cnpj").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IEstadual).HasColumnName(@"IEstadual").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.IMunicipal).HasColumnName(@"IMunicipal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Endereco).HasColumnName(@"Endereco").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.EnderecoNo).HasColumnName(@"EnderecoNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.Complemento).HasColumnName(@"Complemento").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cep).HasColumnName(@"Cep").HasColumnType("int").IsOptional();
            Property(x => x.Bairro).HasColumnName(@"Bairro").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.UfId).HasColumnName(@"UfId").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.PaisId).HasColumnName(@"PaisId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8);
            Property(x => x.Telefone).HasColumnName(@"Telefone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsOptional();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Pais).WithMany(b => b.Empresas).HasForeignKey(c => c.PaisId).WillCascadeOnDelete(false); // Empresas_pais
        }
    }

    // EUsuarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class EUsuarioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EUsuario>
    {
        public EUsuarioConfiguration()
            : this("dbo")
        {
        }

        public EUsuarioConfiguration(string schema)
        {
            ToTable("EUsuarios", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.UsuarioId).HasColumnName(@"UsuarioId").HasColumnType("int").IsRequired();
            Property(x => x.Ativo).HasColumnName(@"Ativo").HasColumnType("bit").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.EUsuarios).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // EUsuarios_empresa
            HasRequired(a => a.Usuario).WithMany(b => b.EUsuarios).HasForeignKey(c => c.UsuarioId).WillCascadeOnDelete(false); // EUsuarios_usuario
        }
    }

    // FInstalacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class FInstalacoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FInstalaco>
    {
        public FInstalacoConfiguration()
            : this("dbo")
        {
        }

        public FInstalacoConfiguration(string schema)
        {
            ToTable("FInstalacoes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Descricao).HasColumnName(@"Descricao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // ISinotico
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class ISinoticoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ISinotico>
    {
        public ISinoticoConfiguration()
            : this("dbo")
        {
        }

        public ISinoticoConfiguration(string schema)
        {
            ToTable("ISinotico", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Classe).HasColumnName(@"Classe").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Unidade).HasColumnName(@"Unidade").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
        }
    }

    // Municipios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class MunicipioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Municipio>
    {
        public MunicipioConfiguration()
            : this("dbo")
        {
        }

        public MunicipioConfiguration(string schema)
        {
            ToTable("Municipios", schema);
            HasKey(x => new { x.Id, x.UfId, x.Municipio_, x.Sigla });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.UfId).HasColumnName(@"UfId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Municipio_).HasColumnName(@"Municipio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Sigla).HasColumnName(@"Sigla").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // AAbastece
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AAbasteceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AAbastece>
    {
        public opc_AAbasteceConfiguration()
            : this("opc")
        {
        }

        public opc_AAbasteceConfiguration(string schema)
        {
            ToTable("AAbastece", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.PavimentoId).HasColumnName(@"PavimentoId").HasColumnType("int").IsRequired();
            Property(x => x.Bombas).HasColumnName(@"Bombas").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AAbasteces).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AAbastece_instalacao
            HasRequired(a => a.opc_Via).WithMany(b => b.opc_AAbasteces).HasForeignKey(c => c.PavimentoId).WillCascadeOnDelete(false); // AAbastece_pavimento
        }
    }

    // AAdmin
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AAdminConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AAdmin>
    {
        public opc_AAdminConfiguration()
            : this("opc")
        {
        }

        public opc_AAdminConfiguration(string schema)
        {
            ToTable("AAdmin", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Requisitom2).HasColumnName(@"Requisitom2").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Disponivelm2).HasColumnName(@"Disponivelm2").HasColumnType("numeric").IsRequired().HasPrecision(18,3);

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AAdmins).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AAdmin_instalacao
        }
    }

    // AAlmox
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AAlmoxConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AAlmox>
    {
        public opc_AAlmoxConfiguration()
            : this("opc")
        {
        }

        public opc_AAlmoxConfiguration(string schema)
        {
            ToTable("AAlmox", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Area).HasColumnName(@"Area").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Especifico).HasColumnName(@"Especifico").HasColumnType("bit").IsRequired();
            Property(x => x.Estoque).HasColumnName(@"Estoque").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AAlmoxes).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AAlmox_instalacao
        }
    }

    // AEstaciona
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AEstacionaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AEstaciona>
    {
        public opc_AEstacionaConfiguration()
            : this("opc")
        {
        }

        public opc_AEstacionaConfiguration(string schema)
        {
            ToTable("AEstaciona", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Frota).HasColumnName(@"Frota").HasColumnType("int").IsRequired();
            Property(x => x.Requisitom2).HasColumnName(@"Requisitom2").HasColumnType("numeric").IsRequired().HasPrecision(18,3);
            Property(x => x.Minimom2).HasColumnName(@"Minimom2").HasColumnType("numeric").IsRequired().HasPrecision(18,3);
            Property(x => x.Disponivelm2).HasColumnName(@"Disponivelm2").HasColumnType("numeric").IsRequired().HasPrecision(18,3);

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AEstacionas).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AEstaciona_instalacao
        }
    }

    // AFunilaria
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AFunilariaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AFunilaria>
    {
        public opc_AFunilariaConfiguration()
            : this("opc")
        {
        }

        public opc_AFunilariaConfiguration(string schema)
        {
            ToTable("AFunilaria", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Area).HasColumnName(@"Area").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Isolada).HasColumnName(@"Isolada").HasColumnType("bit").IsRequired();
            Property(x => x.PPoluicao).HasColumnName(@"PPoluicao").HasColumnType("tinyint").IsOptional();
            Property(x => x.Exaustao).HasColumnName(@"Exaustao").HasColumnType("tinyint").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AFunilarias).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AFunilaria_instalacao
        }
    }

    // AGaragem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AGaragemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AGaragem>
    {
        public opc_AGaragemConfiguration()
            : this("opc")
        {
        }

        public opc_AGaragemConfiguration(string schema)
        {
            ToTable("AGaragem", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Frota).HasColumnName(@"Frota").HasColumnType("int").IsRequired();
            Property(x => x.Requisitom2).HasColumnName(@"Requisitom2").HasColumnType("numeric").IsRequired().HasPrecision(18,3);
            Property(x => x.Minimom2).HasColumnName(@"Minimom2").HasColumnType("numeric").IsRequired().HasPrecision(18,3);
            Property(x => x.Disponivelm2).HasColumnName(@"Disponivelm2").HasColumnType("numeric").IsRequired().HasPrecision(18,3);

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AGaragems).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AGaragem_instalacao
        }
    }

    // AInspecao
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AInspecaoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AInspecao>
    {
        public opc_AInspecaoConfiguration()
            : this("opc")
        {
        }

        public opc_AInspecaoConfiguration(string schema)
        {
            ToTable("AInspecao", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Rampas).HasColumnName(@"Rampas").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AInspecaos).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AInspecao_instalacao
        }
    }

    // ALavacao
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ALavacaoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_ALavacao>
    {
        public opc_ALavacaoConfiguration()
            : this("opc")
        {
        }

        public opc_ALavacaoConfiguration(string schema)
        {
            ToTable("ALavacao", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Maquinas).HasColumnName(@"Maquinas").HasColumnType("int").IsOptional();
            Property(x => x.Aguam3).HasColumnName(@"Aguam3").HasColumnType("numeric").IsRequired().HasPrecision(18,3);

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_ALavacaos).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // ALavacao_instalacao
        }
    }

    // ALubrifica
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ALubrificaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_ALubrifica>
    {
        public opc_ALubrificaConfiguration()
            : this("opc")
        {
        }

        public opc_ALubrificaConfiguration(string schema)
        {
            ToTable("ALubrifica", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Lavacao).HasColumnName(@"Lavacao").HasColumnType("tinyint").IsOptional();
            Property(x => x.Ceramico).HasColumnName(@"Ceramico").HasColumnType("bit").IsRequired();
            Property(x => x.Protecao).HasColumnName(@"Protecao").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_ALubrificas).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // ALubrifica_instalacao
        }
    }

    // AMantem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AMantemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_AMantem>
    {
        public opc_AMantemConfiguration()
            : this("opc")
        {
        }

        public opc_AMantemConfiguration(string schema)
        {
            ToTable("AMantem", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Area).HasColumnName(@"Area").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.PontosAr).HasColumnName(@"PontosAr").HasColumnType("int").IsOptional();
            Property(x => x.Eletricidade).HasColumnName(@"Eletricidade").HasColumnType("tinyint").IsRequired();
            Property(x => x.Elevadores).HasColumnName(@"Elevadores").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_AMantems).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // AMantem_instalacao
        }
    }

    // Atendimentos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_AtendimentoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Atendimento>
    {
        public opc_AtendimentoConfiguration()
            : this("opc")
        {
        }

        public opc_AtendimentoConfiguration(string schema)
        {
            ToTable("Atendimentos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Uteis).HasColumnName(@"Uteis").HasColumnType("bit").IsRequired();
            Property(x => x.Sabados).HasColumnName(@"Sabados").HasColumnType("bit").IsRequired();
            Property(x => x.Domingos).HasColumnName(@"Domingos").HasColumnType("bit").IsRequired();
            Property(x => x.ExtensaoAb).HasColumnName(@"ExtensaoAB").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.ExtensaoBa).HasColumnName(@"ExtensaoBA").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_Atendimentoes).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // Atendimentos_linha
        }
    }

    // ATrafego
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ATrafegoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_ATrafego>
    {
        public opc_ATrafegoConfiguration()
            : this("opc")
        {
        }

        public opc_ATrafegoConfiguration(string schema)
        {
            ToTable("ATrafego", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Plantao).HasColumnName(@"Plantao").HasColumnType("tinyint").IsOptional();
            Property(x => x.Reserva).HasColumnName(@"Reserva").HasColumnType("tinyint").IsOptional();
            Property(x => x.Equipamentos).HasColumnName(@"Equipamentos").HasColumnType("tinyint").IsOptional();
            Property(x => x.Mobiliario).HasColumnName(@"Mobiliario").HasColumnType("tinyint").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_EInstalaco).WithMany(b => b.opc_ATrafegoes).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // ATrafego_instalacao
        }
    }

    // Carrocerias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CarroceriaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Carroceria>
    {
        public opc_CarroceriaConfiguration()
            : this("opc")
        {
        }

        public opc_CarroceriaConfiguration(string schema)
        {
            ToTable("Carrocerias", schema);
            HasKey(x => x.VeiculoId);

            Property(x => x.VeiculoId).HasColumnName(@"VeiculoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fabricante).HasColumnName(@"Fabricante").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Modelo).HasColumnName(@"Modelo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Referencia).HasColumnName(@"Referencia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Ano).HasColumnName(@"Ano").HasColumnType("int").IsOptional();
            Property(x => x.Aquisicao).HasColumnName(@"Aquisicao").HasColumnType("date").IsOptional();
            Property(x => x.Fornecedor).HasColumnName(@"Fornecedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NotaFiscal).HasColumnName(@"NotaFiscal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Valor).HasColumnName(@"Valor").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.ChaveNfe).HasColumnName(@"ChaveNfe").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Encarroca).HasColumnName(@"Encarroca").HasColumnType("date").IsOptional();
            Property(x => x.Portas).HasColumnName(@"Portas").HasColumnType("tinyint").IsRequired();
            Property(x => x.Assentos).HasColumnName(@"Assentos").HasColumnType("tinyint").IsOptional();
            Property(x => x.Capacidade).HasColumnName(@"Capacidade").HasColumnType("tinyint").IsOptional();
            Property(x => x.Piso).HasColumnName(@"Piso").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.EscapeV).HasColumnName(@"EscapeV").HasColumnType("bit").IsRequired();
            Property(x => x.EscapeH).HasColumnName(@"EscapeH").HasColumnType("bit").IsRequired();
            Property(x => x.Catraca).HasColumnName(@"Catraca").HasColumnType("int").IsOptional();
            Property(x => x.PortaIn).HasColumnName(@"PortaIn").HasColumnType("int").IsRequired();
            Property(x => x.SaidaFrente).HasColumnName(@"SaidaFrente").HasColumnType("bit").IsRequired();
            Property(x => x.SaidaMeio).HasColumnName(@"SaidaMeio").HasColumnType("bit").IsRequired();
            Property(x => x.SaidaTras).HasColumnName(@"SaidaTras").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.opc_Veiculo).WithOptional(b => b.opc_Carroceria).WillCascadeOnDelete(false); // Carrocerias_veiculo
        }
    }

    // Chassis
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ChassisConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Chassis>
    {
        public opc_ChassisConfiguration()
            : this("opc")
        {
        }

        public opc_ChassisConfiguration(string schema)
        {
            ToTable("Chassis", schema);
            HasKey(x => x.VeiculoId);

            Property(x => x.VeiculoId).HasColumnName(@"VeiculoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fabricante).HasColumnName(@"Fabricante").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Modelo).HasColumnName(@"Modelo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ChassiNo).HasColumnName(@"ChassiNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Ano).HasColumnName(@"Ano").HasColumnType("int").IsOptional();
            Property(x => x.Aquisicao).HasColumnName(@"Aquisicao").HasColumnType("date").IsOptional();
            Property(x => x.Fornecedor).HasColumnName(@"Fornecedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.NotaFiscal).HasColumnName(@"NotaFiscal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Valor).HasColumnName(@"Valor").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.ChaveNfe).HasColumnName(@"ChaveNfe").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.MotorId).HasColumnName(@"MotorId").HasColumnType("int").IsOptional();
            Property(x => x.Potencia).HasColumnName(@"Potencia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PosMotor).HasColumnName(@"PosMotor").HasColumnType("int").IsOptional();
            Property(x => x.EixosFrente).HasColumnName(@"EixosFrente").HasColumnType("tinyint").IsRequired();
            Property(x => x.EixosTras).HasColumnName(@"EixosTras").HasColumnType("tinyint").IsRequired();
            Property(x => x.PneusFrente).HasColumnName(@"PneusFrente").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.PneusTras).HasColumnName(@"PneusTras").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.TransmiteId).HasColumnName(@"TransmiteId").HasColumnType("int").IsOptional();
            Property(x => x.DirecaoId).HasColumnName(@"DirecaoId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_Motore).WithMany(b => b.opc_Chassis).HasForeignKey(c => c.MotorId).WillCascadeOnDelete(false); // Chassis_motor
            HasRequired(a => a.opc_Veiculo).WithOptional(b => b.opc_Chassis).WillCascadeOnDelete(false); // Chassis_veiculo
        }
    }

    // CLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CLinhaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_CLinha>
    {
        public opc_CLinhaConfiguration()
            : this("opc")
        {
        }

        public opc_CLinhaConfiguration(string schema)
        {
            ToTable("CLinhas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.ClassLinhaId).HasColumnName(@"ClassLinhaId").HasColumnType("int").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.ClassLinha).WithMany(b => b.opc_CLinhas).HasForeignKey(c => c.ClassLinhaId).WillCascadeOnDelete(false); // CLinhas_classlinha
            HasRequired(a => a.Empresa).WithMany(b => b.opc_CLinhas).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // CLinhas_empresa
        }
    }

    // Corredores
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CorredoreConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Corredore>
    {
        public opc_CorredoreConfiguration()
            : this("opc")
        {
        }

        public opc_CorredoreConfiguration(string schema)
        {
            ToTable("Corredores", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Caracteristicas).HasColumnName(@"Caracteristicas").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.UfId).HasColumnName(@"UfId").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Extensao).HasColumnName(@"Extensao").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Corredores).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Corredores_empresa
        }
    }

    // Custos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CustoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Custo>
    {
        public opc_CustoConfiguration()
            : this("opc")
        {
        }

        public opc_CustoConfiguration(string schema)
        {
            ToTable("Custos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Referencia).HasColumnName(@"Referencia").HasColumnType("datetime").IsRequired();
            Property(x => x.Fixo).HasColumnName(@"Fixo").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Variavel).HasColumnName(@"Variavel").HasColumnType("money").IsRequired().HasPrecision(19,4);

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Custoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Custos_empresa
        }
    }

    // CustoMod
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CustoModConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_CustoMod>
    {
        public opc_CustoModConfiguration()
            : this("opc")
        {
        }

        public opc_CustoModConfiguration(string schema)
        {
            ToTable("CustoMod", schema);
            HasKey(x => new { x.Id, x.EmpresaId, x.Referencia, x.Fixo, x.Variavel });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Referencia).HasColumnName(@"Referencia").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Fixo).HasColumnName(@"Fixo").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Variavel).HasColumnName(@"Variavel").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // CVeiculos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CVeiculoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_CVeiculo>
    {
        public opc_CVeiculoConfiguration()
            : this("opc")
        {
        }

        public opc_CVeiculoConfiguration(string schema)
        {
            ToTable("CVeiculos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Categoria).HasColumnName(@"Categoria").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Classe).HasColumnName(@"Classe").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Minimo).HasColumnName(@"Minimo").HasColumnType("int").IsOptional();
            Property(x => x.Maximo).HasColumnName(@"Maximo").HasColumnType("int").IsOptional();
        }
    }

    // CVeiculosAtt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_CVeiculosAttConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_CVeiculosAtt>
    {
        public opc_CVeiculosAttConfiguration()
            : this("opc")
        {
        }

        public opc_CVeiculosAttConfiguration(string schema)
        {
            ToTable("CVeiculosAtt", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Caracteristica).HasColumnName(@"Caracteristica").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Unidade).HasColumnName(@"Unidade").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Variavel).HasColumnName(@"Variavel").HasColumnType("bit").IsRequired();
        }
    }

    // Dimensionar
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_DimensionarConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Dimensionar>
    {
        public opc_DimensionarConfiguration()
            : this("opc")
        {
        }

        public opc_DimensionarConfiguration(string schema)
        {
            ToTable("Dimensionar", schema);
            HasKey(x => new { x.LinhaId, x.Sentido });

            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DiaId).HasColumnName(@"DiaId").HasColumnType("int").IsOptional();
            Property(x => x.PeriodoId).HasColumnName(@"PeriodoId").HasColumnType("int").IsOptional();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QtdViagens).HasColumnName(@"QtdViagens").HasColumnType("int").IsOptional();
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsOptional();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsOptional();
            Property(x => x.Ociosidade).HasColumnName(@"Ociosidade").HasColumnType("int").IsOptional();
            Property(x => x.Passageiros).HasColumnName(@"Passageiros").HasColumnType("int").IsOptional();
            Property(x => x.Ajustado).HasColumnName(@"Ajustado").HasColumnType("int").IsOptional();
            Property(x => x.Critica).HasColumnName(@"Critica").HasColumnType("int").IsOptional();
            Property(x => x.CriticaAjuste).HasColumnName(@"CriticaAjuste").HasColumnType("int").IsOptional();
            Property(x => x.Desvio).HasColumnName(@"Desvio").HasColumnType("int").IsOptional();
            Property(x => x.DesvioAjuste).HasColumnName(@"DesvioAjuste").HasColumnType("int").IsOptional();
            Property(x => x.LotacaoP).HasColumnName(@"LotacaoP").HasColumnType("int").IsOptional();
            Property(x => x.Veiculos).HasColumnName(@"Veiculos").HasColumnType("int").IsOptional();
            Property(x => x.CicloAb).HasColumnName(@"CicloAB").HasColumnType("int").IsOptional();
            Property(x => x.CicloBa).HasColumnName(@"CicloBA").HasColumnType("int").IsOptional();
            Property(x => x.Extensao).HasColumnName(@"Extensao").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
        }
    }

    // EDominios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_EDominioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_EDominio>
    {
        public opc_EDominioConfiguration()
            : this("opc")
        {
        }

        public opc_EDominioConfiguration(string schema)
        {
            ToTable("EDominios", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.DominioId).HasColumnName(@"DominioId").HasColumnType("int").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Dominio).WithMany(b => b.opc_EDominios).HasForeignKey(c => c.DominioId).WillCascadeOnDelete(false); // EDominios_dominio
            HasRequired(a => a.Empresa).WithMany(b => b.opc_EDominios).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Dominios_empresa
        }
    }

    // EInstalacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_EInstalacoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_EInstalaco>
    {
        public opc_EInstalacoConfiguration()
            : this("opc")
        {
        }

        public opc_EInstalacoConfiguration(string schema)
        {
            ToTable("EInstalacoes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstalacaoId).HasColumnName(@"InstalacaoId").HasColumnType("int").IsRequired();
            Property(x => x.PropositoId).HasColumnName(@"PropositoId").HasColumnType("int").IsRequired();
            Property(x => x.AreaCoberta).HasColumnName(@"AreaCoberta").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.AreaTotal).HasColumnName(@"AreaTotal").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.QtdEmpregados).HasColumnName(@"QtdEmpregados").HasColumnType("int").IsOptional();
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsOptional();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsOptional();
            Property(x => x.Efluentes).HasColumnName(@"Efluentes").HasColumnType("bit").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.FInstalaco).WithMany(b => b.opc_EInstalacoes).HasForeignKey(c => c.PropositoId).WillCascadeOnDelete(false); // EInstalacoes_proposito
            HasRequired(a => a.opc_Instalaco).WithMany(b => b.opc_EInstalacoes).HasForeignKey(c => c.InstalacaoId).WillCascadeOnDelete(false); // EInstalacoes_instalacao
        }
    }

    // EPeriodos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_EPeriodoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_EPeriodo>
    {
        public opc_EPeriodoConfiguration()
            : this("opc")
        {
        }

        public opc_EPeriodoConfiguration(string schema)
        {
            ToTable("EPeriodos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.PeriodoId).HasColumnName(@"PeriodoId").HasColumnType("int").IsRequired();
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_EPeriodoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // EPeriodos_empresa
            HasRequired(a => a.Periodo).WithMany(b => b.opc_EPeriodoes).HasForeignKey(c => c.PeriodoId).WillCascadeOnDelete(false); // EPeriodos_periodo
        }
    }

    // FAjuste
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_FAjusteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_FAjuste>
    {
        public opc_FAjusteConfiguration()
            : this("opc")
        {
        }

        public opc_FAjusteConfiguration(string schema)
        {
            ToTable("FAjuste", schema);
            HasKey(x => new { x.LinhaId, x.Ano, x.Mes });

            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ano).HasColumnName(@"Ano").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Mes).HasColumnName(@"Mes").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Referencia).HasColumnName(@"Referencia").HasColumnType("date").IsOptional();
            Property(x => x.Passageiros).HasColumnName(@"Passageiros").HasColumnType("int").IsOptional();
            Property(x => x.Fator).HasColumnName(@"Fator").HasColumnType("numeric").IsOptional().HasPrecision(29,19);
        }
    }

    // FViagens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_FViagenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_FViagen>
    {
        public opc_FViagenConfiguration()
            : this("opc")
        {
        }

        public opc_FViagenConfiguration(string schema)
        {
            ToTable("FViagens", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ViagemId).HasColumnName(@"ViagemId").HasColumnType("int").IsRequired();
            Property(x => x.PontoId).HasColumnName(@"PontoId").HasColumnType("int").IsRequired();
            Property(x => x.Embarques).HasColumnName(@"Embarques").HasColumnType("int").IsOptional();
            Property(x => x.Desembarques).HasColumnName(@"Desembarques").HasColumnType("int").IsOptional();
            Property(x => x.Acumulado).HasColumnName(@"Acumulado").HasColumnType("int").IsOptional().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);

            // Foreign keys
            HasRequired(a => a.opc_PtLinha).WithMany(b => b.opc_FViagens).HasForeignKey(c => c.PontoId).WillCascadeOnDelete(false); // FViagens_ponto
            HasRequired(a => a.opc_Viagen).WithMany(b => b.opc_FViagens).HasForeignKey(c => c.ViagemId).WillCascadeOnDelete(false); // FViagens_viagem
        }
    }

    // Horarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_HorarioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Horario>
    {
        public opc_HorarioConfiguration()
            : this("opc")
        {
        }

        public opc_HorarioConfiguration(string schema)
        {
            ToTable("Horarios", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.DiaId).HasColumnName(@"DiaId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsRequired();
            Property(x => x.AtendimentoId).HasColumnName(@"AtendimentoId").HasColumnType("int").IsOptional();
            Property(x => x.PeriodoId).HasColumnName(@"PeriodoId").HasColumnType("int").IsOptional().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_Atendimento).WithMany(b => b.opc_Horarios).HasForeignKey(c => c.AtendimentoId).WillCascadeOnDelete(false); // Horarios_atendimento
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_Horarios).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // Horarios_linha
        }
    }

    // Instalacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_InstalacoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Instalaco>
    {
        public opc_InstalacoConfiguration()
            : this("opc")
        {
        }

        public opc_InstalacoConfiguration(string schema)
        {
            ToTable("Instalacoes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Endereco).HasColumnName(@"Endereco").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.EnderecoNo).HasColumnName(@"EnderecoNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.Complemento).HasColumnName(@"Complemento").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cep).HasColumnName(@"Cep").HasColumnType("int").IsOptional();
            Property(x => x.Bairro).HasColumnName(@"Bairro").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.UfId).HasColumnName(@"UfId").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Telefone).HasColumnName(@"Telefone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Latitude).HasColumnName(@"Latitude").HasColumnType("numeric").IsOptional().HasPrecision(24,12);
            Property(x => x.Longitude).HasColumnName(@"Longitude").HasColumnType("numeric").IsOptional().HasPrecision(24,12);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Instalacoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Instalacoes_empresa
        }
    }

    // ItAtendimentos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ItAtendimentoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_ItAtendimento>
    {
        public opc_ItAtendimentoConfiguration()
            : this("opc")
        {
        }

        public opc_ItAtendimentoConfiguration(string schema)
        {
            ToTable("ItAtendimentos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AtendimentoId).HasColumnName(@"AtendimentoId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Percurso).HasColumnName(@"Percurso").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Extensao).HasColumnName(@"Extensao").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.PavimentoId).HasColumnName(@"PavimentoId").HasColumnType("int").IsOptional();
            Property(x => x.Abrangencia).HasColumnName(@"Abrangencia").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.CondicaoId).HasColumnName(@"CondicaoId").HasColumnType("int").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_Via).WithMany(b => b.opc_ItAtendimentoes).HasForeignKey(c => c.PavimentoId).WillCascadeOnDelete(false); // ItAtendimentos_pavimento
            HasRequired(a => a.opc_Atendimento).WithMany(b => b.opc_ItAtendimentoes).HasForeignKey(c => c.AtendimentoId).WillCascadeOnDelete(false); // ItAtendimentos_atendimento
        }
    }

    // Itinerarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ItinerarioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Itinerario>
    {
        public opc_ItinerarioConfiguration()
            : this("opc")
        {
        }

        public opc_ItinerarioConfiguration(string schema)
        {
            ToTable("Itinerarios", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Percurso).HasColumnName(@"Percurso").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Extensao).HasColumnName(@"Extensao").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.PavimentoId).HasColumnName(@"PavimentoId").HasColumnType("int").IsOptional();
            Property(x => x.Abrangencia).HasColumnName(@"Abrangencia").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.CondicaoId).HasColumnName(@"CondicaoId").HasColumnType("int").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_Via).WithMany(b => b.opc_Itinerarios).HasForeignKey(c => c.PavimentoId).WillCascadeOnDelete(false); // Itinerarios_pavimento
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_Itinerarios).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // Itinerarios_linha
        }
    }

    // ItTroncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ItTroncoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_ItTronco>
    {
        public opc_ItTroncoConfiguration()
            : this("opc")
        {
        }

        public opc_ItTroncoConfiguration(string schema)
        {
            ToTable("ItTroncos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TroncoId).HasColumnName(@"TroncoId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Percurso).HasColumnName(@"Percurso").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Extensao).HasColumnName(@"Extensao").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.PavimentoId).HasColumnName(@"PavimentoId").HasColumnType("int").IsOptional();
            Property(x => x.Abrangencia).HasColumnName(@"Abrangencia").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.CondicaoId).HasColumnName(@"CondicaoId").HasColumnType("int").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_Via).WithMany(b => b.opc_ItTroncoes).HasForeignKey(c => c.PavimentoId).WillCascadeOnDelete(false); // ItTroncos_pavimento
            HasRequired(a => a.opc_Tronco).WithMany(b => b.opc_ItTroncoes).HasForeignKey(c => c.TroncoId).WillCascadeOnDelete(false); // ItTroncos_tronco
        }
    }

    // Linhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LinhaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Linha>
    {
        public opc_LinhaConfiguration()
            : this("opc")
        {
        }

        public opc_LinhaConfiguration(string schema)
        {
            ToTable("Linhas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Uteis).HasColumnName(@"Uteis").HasColumnType("bit").IsRequired();
            Property(x => x.Sabados).HasColumnName(@"Sabados").HasColumnType("bit").IsRequired();
            Property(x => x.Domingos).HasColumnName(@"Domingos").HasColumnType("bit").IsRequired();
            Property(x => x.DominioId).HasColumnName(@"DominioId").HasColumnType("int").IsRequired();
            Property(x => x.OperacaoId).HasColumnName(@"OperacaoId").HasColumnType("int").IsRequired();
            Property(x => x.Classificacao).HasColumnName(@"Classificacao").HasColumnType("int").IsRequired();
            Property(x => x.Captacao).HasColumnName(@"Captacao").HasColumnType("bit").IsRequired();
            Property(x => x.Transporte).HasColumnName(@"Transporte").HasColumnType("bit").IsRequired();
            Property(x => x.Distribuicao).HasColumnName(@"Distribuicao").HasColumnType("bit").IsRequired();
            Property(x => x.ExtensaoAb).HasColumnName(@"ExtensaoAB").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.ExtensaoBa).HasColumnName(@"ExtensaoBA").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Linhas).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Linhas_empresa
            HasRequired(a => a.opc_CLinha).WithMany(b => b.opc_Linhas).HasForeignKey(c => c.Classificacao).WillCascadeOnDelete(false); // Linhas_classificacao
            HasRequired(a => a.opc_EDominio).WithMany(b => b.opc_Linhas).HasForeignKey(c => c.DominioId).WillCascadeOnDelete(false); // Linhas_dominio
            HasRequired(a => a.opc_Operaco).WithMany(b => b.opc_Linhas).HasForeignKey(c => c.OperacaoId).WillCascadeOnDelete(false); // Linhas_operacao
        }
    }

    // LnCorredores
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnCorredoreConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_LnCorredore>
    {
        public opc_LnCorredoreConfiguration()
            : this("opc")
        {
        }

        public opc_LnCorredoreConfiguration(string schema)
        {
            ToTable("LnCorredores", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CorredorId).HasColumnName(@"CorredorId").HasColumnType("int").IsRequired();
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Extensao).HasColumnName(@"Extensao").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Corredore).WithMany(b => b.opc_LnCorredores).HasForeignKey(c => c.CorredorId).WillCascadeOnDelete(false); // LnCorredores_corredor
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_LnCorredores).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // LnCorredores_linha
        }
    }

    // LnPesquisas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnPesquisaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_LnPesquisa>
    {
        public opc_LnPesquisaConfiguration()
            : this("opc")
        {
        }

        public opc_LnPesquisaConfiguration(string schema)
        {
            ToTable("LnPesquisas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PesquisaId).HasColumnName(@"PesquisaId").HasColumnType("int").IsRequired();
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Uteis).HasColumnName(@"Uteis").HasColumnType("bit").IsRequired();
            Property(x => x.Sabados).HasColumnName(@"Sabados").HasColumnType("bit").IsRequired();
            Property(x => x.Domingos).HasColumnName(@"Domingos").HasColumnType("bit").IsRequired();
            Property(x => x.Responsavel).HasColumnName(@"Responsavel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_LnPesquisas).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // LnPesquisas_linha
            HasRequired(a => a.opc_Pesquisa).WithMany(b => b.opc_LnPesquisas).HasForeignKey(c => c.PesquisaId).WillCascadeOnDelete(false); // LnPesquisas_pesquisa
        }
    }

    // LnTerminais
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnTerminaiConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_LnTerminai>
    {
        public opc_LnTerminaiConfiguration()
            : this("opc")
        {
        }

        public opc_LnTerminaiConfiguration(string schema)
        {
            ToTable("LnTerminais", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TerminalId).HasColumnName(@"TerminalId").HasColumnType("int").IsRequired();
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Uteis).HasColumnName(@"Uteis").HasColumnType("bit").IsRequired();
            Property(x => x.UteisFluxo).HasColumnName(@"UteisFluxo").HasColumnType("int").IsOptional();
            Property(x => x.Sabados).HasColumnName(@"Sabados").HasColumnType("bit").IsRequired();
            Property(x => x.SabadosFluxo).HasColumnName(@"SabadosFluxo").HasColumnType("int").IsOptional();
            Property(x => x.Domingos).HasColumnName(@"Domingos").HasColumnType("bit").IsRequired();
            Property(x => x.DomingosFluxo).HasColumnName(@"DomingosFluxo").HasColumnType("int").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_LnTerminais).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // LnTerminais_linha
            HasRequired(a => a.opc_Terminai).WithMany(b => b.opc_LnTerminais).HasForeignKey(c => c.TerminalId).WillCascadeOnDelete(false); // LnTerminais_terminal
        }
    }

    // LnTroncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LnTroncoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_LnTronco>
    {
        public opc_LnTroncoConfiguration()
            : this("opc")
        {
        }

        public opc_LnTroncoConfiguration(string schema)
        {
            ToTable("LnTroncos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TroncoId).HasColumnName(@"TroncoId").HasColumnType("int").IsRequired();
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_LnTroncoes).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // LnTroncos_linha
            HasRequired(a => a.opc_Tronco).WithMany(b => b.opc_LnTroncoes).HasForeignKey(c => c.TroncoId).WillCascadeOnDelete(false); // LnTroncos_tronco
        }
    }

    // Lotacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_LotacoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Lotaco>
    {
        public opc_LotacoConfiguration()
            : this("opc")
        {
        }

        public opc_LotacoConfiguration(string schema)
        {
            ToTable("Lotacoes", schema);
            HasKey(x => new { x.ClasseId, x.Classe, x.OcupacaoId, x.Denominacao });

            Property(x => x.ClasseId).HasColumnName(@"ClasseId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Classe).HasColumnName(@"Classe").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OcupacaoId).HasColumnName(@"OcupacaoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Lotacao).HasColumnName(@"Lotacao").HasColumnType("int").IsOptional();
        }
    }

    // Motores
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_MotoreConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Motore>
    {
        public opc_MotoreConfiguration()
            : this("opc")
        {
        }

        public opc_MotoreConfiguration(string schema)
        {
            ToTable("Motores", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Classificacao).HasColumnName(@"Classificacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Descricao).HasColumnName(@"Descricao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
        }
    }

    // Ocupacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_OcupacoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Ocupaco>
    {
        public opc_OcupacoConfiguration()
            : this("opc")
        {
        }

        public opc_OcupacoConfiguration(string schema)
        {
            ToTable("Ocupacoes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Nivel).HasColumnName(@"Nivel").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.Densidade).HasColumnName(@"Densidade").HasColumnType("numeric").IsRequired().HasPrecision(9,3);
        }
    }

    // Ofertas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_OfertaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Oferta>
    {
        public opc_OfertaConfiguration()
            : this("opc")
        {
        }

        public opc_OfertaConfiguration(string schema)
        {
            ToTable("Ofertas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Ano).HasColumnName(@"Ano").HasColumnType("int").IsRequired();
            Property(x => x.Mes).HasColumnName(@"Mes").HasColumnType("int").IsRequired();
            Property(x => x.Categoria).HasColumnName(@"Categoria").HasColumnType("int").IsRequired();
            Property(x => x.Passageiros).HasColumnName(@"Passageiros").HasColumnType("int").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_Ofertas).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // Ofertas_linha
            HasRequired(a => a.opc_TCategoria).WithMany(b => b.opc_Ofertas).HasForeignKey(c => c.Categoria).WillCascadeOnDelete(false); // Ofertas_categoria
        }
    }

    // Operacoes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_OperacoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Operaco>
    {
        public opc_OperacoConfiguration()
            : this("opc")
        {
        }

        public opc_OperacoConfiguration(string schema)
        {
            ToTable("Operacoes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.OperLinhaId).HasColumnName(@"OperLinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Operacoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Operacoes_empresa
            HasRequired(a => a.OperLinha).WithMany(b => b.opc_Operacoes).HasForeignKey(c => c.OperLinhaId).WillCascadeOnDelete(false); // Operacoes_operlinha
        }
    }

    // Pesquisas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PesquisaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Pesquisa>
    {
        public opc_PesquisaConfiguration()
            : this("opc")
        {
        }

        public opc_PesquisaConfiguration(string schema)
        {
            ToTable("Pesquisas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Identificacao).HasColumnName(@"Identificacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("date").IsRequired();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("date").IsRequired();
            Property(x => x.TerminalId).HasColumnName(@"TerminalId").HasColumnType("int").IsOptional();
            Property(x => x.TroncoId).HasColumnName(@"TroncoId").HasColumnType("int").IsOptional();
            Property(x => x.CorredorId).HasColumnName(@"CorredorId").HasColumnType("int").IsOptional();
            Property(x => x.OperacaoId).HasColumnName(@"OperacaoId").HasColumnType("int").IsOptional();
            Property(x => x.Classificacao).HasColumnName(@"Classificacao").HasColumnType("int").IsOptional();
            Property(x => x.Interna).HasColumnName(@"Interna").HasColumnType("bit").IsRequired();
            Property(x => x.Fornecedor).HasColumnName(@"Fornecedor").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Contrato).HasColumnName(@"Contrato").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Uteis).HasColumnName(@"Uteis").HasColumnType("bit").IsRequired();
            Property(x => x.Sabados).HasColumnName(@"Sabados").HasColumnType("bit").IsRequired();
            Property(x => x.Domingos).HasColumnName(@"Domingos").HasColumnType("bit").IsRequired();
            Property(x => x.Responsavel).HasColumnName(@"Responsavel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_CLinha).WithMany(b => b.opc_Pesquisas).HasForeignKey(c => c.Classificacao).WillCascadeOnDelete(false); // Pesquisas_classificacao
            HasOptional(a => a.opc_Corredore).WithMany(b => b.opc_Pesquisas).HasForeignKey(c => c.CorredorId).WillCascadeOnDelete(false); // Pesquisas_corredor
            HasOptional(a => a.opc_Operaco).WithMany(b => b.opc_Pesquisas).HasForeignKey(c => c.OperacaoId).WillCascadeOnDelete(false); // Pesquisas_operacao
            HasOptional(a => a.opc_Terminai).WithMany(b => b.opc_Pesquisas).HasForeignKey(c => c.TerminalId).WillCascadeOnDelete(false); // Pesquisas_terminal
            HasOptional(a => a.opc_Tronco).WithMany(b => b.opc_Pesquisas).HasForeignKey(c => c.TroncoId).WillCascadeOnDelete(false); // Pesquisas_tronco
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Pesquisas).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Pesquisas_empresa
        }
    }

    // Pontos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PontoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Ponto>
    {
        public opc_PontoConfiguration()
            : this("opc")
        {
        }

        public opc_PontoConfiguration(string schema)
        {
            ToTable("Pontos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Identificacao).HasColumnName(@"Identificacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Endereco).HasColumnName(@"Endereco").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.EnderecoRef).HasColumnName(@"EnderecoRef").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cep).HasColumnName(@"Cep").HasColumnType("int").IsOptional();
            Property(x => x.Bairro).HasColumnName(@"Bairro").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.UfId).HasColumnName(@"UfId").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Intercambio).HasColumnName(@"Intercambio").HasColumnType("bit").IsRequired();
            Property(x => x.Latitude).HasColumnName(@"Latitude").HasColumnType("numeric").IsOptional().HasPrecision(24,12);
            Property(x => x.Longitude).HasColumnName(@"Longitude").HasColumnType("numeric").IsOptional().HasPrecision(24,12);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Pontoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Pontos_empresa
        }
    }

    // pontos_repetidos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PontosRepetidoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PontosRepetido>
    {
        public opc_PontosRepetidoConfiguration()
            : this("opc")
        {
        }

        public opc_PontosRepetidoConfiguration(string schema)
        {
            ToTable("pontos_repetidos", schema);
            HasKey(x => new { x.EmpresaId, x.Prefixo, x.Identificacao });

            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Identificacao).HasColumnName(@"Identificacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ocorrencias).HasColumnName(@"Ocorrencias").HasColumnType("int").IsOptional();
        }
    }

    // PrLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PrLinhaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PrLinha>
    {
        public opc_PrLinhaConfiguration()
            : this("opc")
        {
        }

        public opc_PrLinhaConfiguration(string schema)
        {
            ToTable("PrLinhas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.PeriodoId).HasColumnName(@"PeriodoId").HasColumnType("int").IsRequired();
            Property(x => x.DiaId).HasColumnName(@"DiaId").HasColumnType("int").IsRequired();
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsRequired();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsRequired();
            Property(x => x.CicloAb).HasColumnName(@"CicloAB").HasColumnType("int").IsOptional();
            Property(x => x.CicloBa).HasColumnName(@"CicloBA").HasColumnType("int").IsOptional();
            Property(x => x.CVeiculoId).HasColumnName(@"CVeiculoId").HasColumnType("int").IsOptional();
            Property(x => x.OcupacaoId).HasColumnName(@"OcupacaoId").HasColumnType("int").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_CVeiculo).WithMany(b => b.opc_PrLinhas).HasForeignKey(c => c.CVeiculoId).WillCascadeOnDelete(false); // PrLinhas_cveiculo
            HasOptional(a => a.opc_Ocupaco).WithMany(b => b.opc_PrLinhas).HasForeignKey(c => c.OcupacaoId).WillCascadeOnDelete(false); // PrLinhas_ocupacao
            HasRequired(a => a.opc_EPeriodo).WithMany(b => b.opc_PrLinhas).HasForeignKey(c => c.PeriodoId).WillCascadeOnDelete(false); // PrLinhas_periodo
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_PrLinhas).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // PrLinhas_linha
        }
    }

    // PtAtendimentos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtAtendimentoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PtAtendimento>
    {
        public opc_PtAtendimentoConfiguration()
            : this("opc")
        {
        }

        public opc_PtAtendimentoConfiguration(string schema)
        {
            ToTable("PtAtendimentos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AtendimentoId).HasColumnName(@"AtendimentoId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.PontoId).HasColumnName(@"PontoId").HasColumnType("int").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Atendimento).WithMany(b => b.opc_PtAtendimentoes).HasForeignKey(c => c.AtendimentoId).WillCascadeOnDelete(false); // PtAtendimentos_atendimento
            HasRequired(a => a.opc_Ponto).WithMany(b => b.opc_PtAtendimentoes).HasForeignKey(c => c.PontoId).WillCascadeOnDelete(false); // PtAtendimentos_ponto
        }
    }

    // PtDestino
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtDestinoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PtDestino>
    {
        public opc_PtDestinoConfiguration()
            : this("opc")
        {
        }

        public opc_PtDestinoConfiguration(string schema)
        {
            ToTable("PtDestino", schema);
            HasKey(x => new { x.Id, x.LinhaId, x.Sentido, x.PontoId, x.Prefixo, x.Identificacao });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PontoId).HasColumnName(@"PontoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Identificacao).HasColumnName(@"Identificacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // PTipicos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PTipicoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PTipico>
    {
        public opc_PTipicoConfiguration()
            : this("opc")
        {
        }

        public opc_PTipicoConfiguration(string schema)
        {
            ToTable("PTipicos", schema);
            HasKey(x => new { x.Id, x.LinhaId, x.Denominacao, x.DiaId, x.Inicio, x.Termino });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DiaId).HasColumnName(@"DiaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PInicio).HasColumnName(@"pInicio").HasColumnType("int").IsOptional();
            Property(x => x.PTermino).HasColumnName(@"pTermino").HasColumnType("int").IsOptional();
            Property(x => x.Duracao).HasColumnName(@"Duracao").HasColumnType("int").IsOptional();
            Property(x => x.Lotacao).HasColumnName(@"Lotacao").HasColumnType("int").IsOptional();
            Property(x => x.CicloAb).HasColumnName(@"CicloAB").HasColumnType("int").IsOptional();
            Property(x => x.CicloBa).HasColumnName(@"CicloBA").HasColumnType("int").IsOptional();
        }
    }

    // PtLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtLinhaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PtLinha>
    {
        public opc_PtLinhaConfiguration()
            : this("opc")
        {
        }

        public opc_PtLinhaConfiguration(string schema)
        {
            ToTable("PtLinhas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.PontoId).HasColumnName(@"PontoId").HasColumnType("int").IsRequired();
            Property(x => x.OrigemId).HasColumnName(@"OrigemId").HasColumnType("int").IsOptional();
            Property(x => x.DestinoId).HasColumnName(@"DestinoId").HasColumnType("int").IsOptional();
            Property(x => x.Fluxo).HasColumnName(@"Fluxo").HasColumnType("int").IsOptional();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Destino).WithMany(b => b.opc_PtLinhas_DestinoId).HasForeignKey(c => c.DestinoId).WillCascadeOnDelete(false); // PtLinhas_destino
            HasOptional(a => a.opc_PtLinha_OrigemId).WithMany(b => b.opc_PtLinhas_OrigemId).HasForeignKey(c => c.OrigemId).WillCascadeOnDelete(false); // PtLinhas_origem
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_PtLinhas).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // PtLinhas_linha
            HasRequired(a => a.opc_Ponto).WithMany(b => b.opc_PtLinhas).HasForeignKey(c => c.PontoId).WillCascadeOnDelete(false); // PtLinhas_ponto
        }
    }

    // PtOrigem
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtOrigemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PtOrigem>
    {
        public opc_PtOrigemConfiguration()
            : this("opc")
        {
        }

        public opc_PtOrigemConfiguration(string schema)
        {
            ToTable("PtOrigem", schema);
            HasKey(x => new { x.Id, x.LinhaId, x.Sentido, x.PontoId, x.Prefixo, x.Identificacao });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PontoId).HasColumnName(@"PontoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Identificacao).HasColumnName(@"Identificacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // PtTroncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_PtTroncoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_PtTronco>
    {
        public opc_PtTroncoConfiguration()
            : this("opc")
        {
        }

        public opc_PtTroncoConfiguration(string schema)
        {
            ToTable("PtTroncos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TroncoId).HasColumnName(@"TroncoId").HasColumnType("int").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.PontoId).HasColumnName(@"PontoId").HasColumnType("int").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Ponto).WithMany(b => b.opc_PtTroncoes).HasForeignKey(c => c.PontoId).WillCascadeOnDelete(false); // PtTroncos_ponto
            HasRequired(a => a.opc_Tronco).WithMany(b => b.opc_PtTroncoes).HasForeignKey(c => c.TroncoId).WillCascadeOnDelete(false); // PtTroncos_tronco
        }
    }

    // Renovacao
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_RenovacaoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Renovacao>
    {
        public opc_RenovacaoConfiguration()
            : this("opc")
        {
        }

        public opc_RenovacaoConfiguration(string schema)
        {
            ToTable("Renovacao", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Ano).HasColumnName(@"Ano").HasColumnType("int").IsRequired();
            Property(x => x.Mes).HasColumnName(@"Mes").HasColumnType("int").IsRequired();
            Property(x => x.DiaId).HasColumnName(@"DiaId").HasColumnType("int").IsOptional();
            Property(x => x.Indice).HasColumnName(@"Indice").HasColumnType("numeric").IsRequired().HasPrecision(18,3);
            Property(x => x.Referencia).HasColumnName(@"Referencia").HasColumnType("date").IsOptional().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Linha).WithMany(b => b.opc_Renovacaos).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // Renovacao_linha
        }
    }

    // Sinotico
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_SinoticoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Sinotico>
    {
        public opc_SinoticoConfiguration()
            : this("opc")
        {
        }

        public opc_SinoticoConfiguration(string schema)
        {
            ToTable("Sinotico", schema);
            HasKey(x => new { x.LinhaId, x.Sentido, x.SinoticoId });

            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DiaId).HasColumnName(@"DiaId").HasColumnType("int").IsOptional();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SinoticoId).HasColumnName(@"SinoticoId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
        }
    }

    // Tarifas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TarifaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Tarifa>
    {
        public opc_TarifaConfiguration()
            : this("opc")
        {
        }

        public opc_TarifaConfiguration(string schema)
        {
            ToTable("Tarifas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Referencia).HasColumnName(@"Referencia").HasColumnType("date").IsRequired();
            Property(x => x.Valor).HasColumnName(@"Valor").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Decreto).HasColumnName(@"Decreto").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Tarifas).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Tarifas_empresa
        }
    }

    // TarifaMod
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TarifaModConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_TarifaMod>
    {
        public opc_TarifaModConfiguration()
            : this("opc")
        {
        }

        public opc_TarifaModConfiguration(string schema)
        {
            ToTable("TarifaMod", schema);
            HasKey(x => new { x.Id, x.EmpresaId, x.Denominacao, x.Gratuidade });

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Gratuidade).HasColumnName(@"Gratuidade").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Rateio).HasColumnName(@"Rateio").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.Tarifa).HasColumnName(@"Tarifa").HasColumnType("numeric").IsOptional().HasPrecision(32,9);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();
        }
    }

    // TCategorias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TCategoriaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_TCategoria>
    {
        public opc_TCategoriaConfiguration()
            : this("opc")
        {
        }

        public opc_TCategoriaConfiguration(string schema)
        {
            ToTable("TCategorias", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Gratuidade).HasColumnName(@"Gratuidade").HasColumnType("bit").IsRequired();
            Property(x => x.Rateio).HasColumnName(@"Rateio").HasColumnType("numeric").IsOptional().HasPrecision(9,3);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_TCategorias).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // TCategorias_empresa
        }
    }

    // Terminais
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TerminaiConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Terminai>
    {
        public opc_TerminaiConfiguration()
            : this("opc")
        {
        }

        public opc_TerminaiConfiguration(string schema)
        {
            ToTable("Terminais", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cnpj).HasColumnName(@"Cnpj").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IEstadual).HasColumnName(@"IEstadual").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.IMunicipal).HasColumnName(@"IMunicipal").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Endereco).HasColumnName(@"Endereco").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.EnderecoNo).HasColumnName(@"EnderecoNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.Complemento).HasColumnName(@"Complemento").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Cep).HasColumnName(@"Cep").HasColumnType("int").IsOptional();
            Property(x => x.Bairro).HasColumnName(@"Bairro").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Municipio).HasColumnName(@"Municipio").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.UfId).HasColumnName(@"UfId").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Telefone).HasColumnName(@"Telefone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsOptional();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsOptional();
            Property(x => x.Latitude).HasColumnName(@"Latitude").HasColumnType("numeric").IsOptional().HasPrecision(24,12);
            Property(x => x.Longitude).HasColumnName(@"Longitude").HasColumnType("numeric").IsOptional().HasPrecision(24,12);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Terminais).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Terminais_empresa
        }
    }

    // TotalViagens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TotalViagenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_TotalViagen>
    {
        public opc_TotalViagenConfiguration()
            : this("opc")
        {
        }

        public opc_TotalViagenConfiguration(string schema)
        {
            ToTable("TotalViagens", schema);
            HasKey(x => new { x.LinhaId, x.DiaId, x.Sentido });

            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DiaId).HasColumnName(@"DiaId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Total).HasColumnName(@"Total").HasColumnType("int").IsOptional();
            Property(x => x.KmDia).HasColumnName(@"KmDia").HasColumnType("numeric").IsOptional().HasPrecision(24,3);
            Property(x => x.KmSemana).HasColumnName(@"KmSemana").HasColumnType("numeric").IsOptional().HasPrecision(26,3);
            Property(x => x.KmMes).HasColumnName(@"KmMes").HasColumnType("numeric").IsOptional().HasPrecision(38,6);
        }
    }

    // Troncos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TroncoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Tronco>
    {
        public opc_TroncoConfiguration()
            : this("opc")
        {
        }

        public opc_TroncoConfiguration(string schema)
        {
            ToTable("Troncos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ExtensaoAb).HasColumnName(@"ExtensaoAB").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.ExtensaoBa).HasColumnName(@"ExtensaoBA").HasColumnType("numeric").IsOptional().HasPrecision(18,3);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Troncoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Troncos_empresa
        }
    }

    // TServicos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_TServicoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_TServico>
    {
        public opc_TServicoConfiguration()
            : this("opc")
        {
        }

        public opc_TServicoConfiguration(string schema)
        {
            ToTable("TServicos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TerminalId).HasColumnName(@"TerminalId").HasColumnType("int").IsRequired();
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Descricao).HasColumnName(@"Descricao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsOptional();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsOptional();

            // Foreign keys
            HasRequired(a => a.opc_Terminai).WithMany(b => b.opc_TServicoes).HasForeignKey(c => c.TerminalId).WillCascadeOnDelete(false); // TServicos_terminal
        }
    }

    // Veiculos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_VeiculoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Veiculo>
    {
        public opc_VeiculoConfiguration()
            : this("opc")
        {
        }

        public opc_VeiculoConfiguration(string schema)
        {
            ToTable("Veiculos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsRequired();
            Property(x => x.Numero).HasColumnName(@"Numero").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Cor).HasColumnName(@"Cor").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Classe).HasColumnName(@"Classe").HasColumnType("int").IsRequired();
            Property(x => x.Placa).HasColumnName(@"Placa").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Renavam).HasColumnName(@"Renavam").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Antt).HasColumnName(@"Antt").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("date").IsOptional();
            Property(x => x.Inativo).HasColumnName(@"Inativo").HasColumnType("bit").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Empresa).WithMany(b => b.opc_Veiculoes).HasForeignKey(c => c.EmpresaId).WillCascadeOnDelete(false); // Veiculos_empresa
            HasRequired(a => a.opc_CVeiculo).WithMany(b => b.opc_Veiculoes).HasForeignKey(c => c.Classe).WillCascadeOnDelete(false); // Veiculos_classe
        }
    }

    // VeiculosAtt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_VeiculosAttConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_VeiculosAtt>
    {
        public opc_VeiculosAttConfiguration()
            : this("opc")
        {
        }

        public opc_VeiculosAttConfiguration(string schema)
        {
            ToTable("VeiculosAtt", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Classe).HasColumnName(@"Classe").HasColumnType("int").IsRequired();
            Property(x => x.Attributo).HasColumnName(@"Attributo").HasColumnType("int").IsRequired();
            Property(x => x.Conteudo).HasColumnName(@"Conteudo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);

            // Foreign keys
            HasRequired(a => a.opc_CVeiculo).WithMany(b => b.opc_VeiculosAtts).HasForeignKey(c => c.Classe).WillCascadeOnDelete(false); // VeiculosAtt_classe
            HasRequired(a => a.opc_CVeiculosAtt).WithMany(b => b.opc_VeiculosAtts).HasForeignKey(c => c.Attributo).WillCascadeOnDelete(false); // VeiculosAtt_atributo
        }
    }

    // Vias
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ViaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Via>
    {
        public opc_ViaConfiguration()
            : this("opc")
        {
        }

        public opc_ViaConfiguration(string schema)
        {
            ToTable("Vias", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
        }
    }

    // Viagens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class opc_ViagenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<opc_Viagen>
    {
        public opc_ViagenConfiguration()
            : this("opc")
        {
        }

        public opc_ViagenConfiguration(string schema)
        {
            ToTable("Viagens", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinhaId).HasColumnName(@"LinhaId").HasColumnType("int").IsRequired();
            Property(x => x.Item).HasColumnName(@"Item").HasColumnType("int").IsOptional();
            Property(x => x.Data).HasColumnName(@"Data").HasColumnType("date").IsRequired();
            Property(x => x.Sentido).HasColumnName(@"Sentido").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.HorarioId).HasColumnName(@"HorarioId").HasColumnType("int").IsOptional();
            Property(x => x.PontoId).HasColumnName(@"PontoId").HasColumnType("int").IsOptional();
            Property(x => x.VeiculoId).HasColumnName(@"VeiculoId").HasColumnType("int").IsOptional();
            Property(x => x.Chegada).HasColumnName(@"Chegada").HasColumnType("time").IsOptional();
            Property(x => x.Inicio).HasColumnName(@"Inicio").HasColumnType("time").IsRequired();
            Property(x => x.Termino).HasColumnName(@"Termino").HasColumnType("time").IsOptional();
            Property(x => x.Passageiros).HasColumnName(@"Passageiros").HasColumnType("int").IsOptional();
            Property(x => x.Inicial).HasColumnName(@"Inicial").HasColumnType("int").IsOptional();
            Property(x => x.Final).HasColumnName(@"Final").HasColumnType("int").IsOptional();
            Property(x => x.Responsavel).HasColumnName(@"Responsavel").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.opc_Horario).WithMany(b => b.opc_Viagens).HasForeignKey(c => c.HorarioId).WillCascadeOnDelete(false); // Viagens_horario
            HasOptional(a => a.opc_PtLinha).WithMany(b => b.opc_Viagens).HasForeignKey(c => c.PontoId).WillCascadeOnDelete(false); // Viagens_ponto
            HasOptional(a => a.opc_Veiculo).WithMany(b => b.opc_Viagens).HasForeignKey(c => c.VeiculoId).WillCascadeOnDelete(false); // Viagens_veiculo
            HasRequired(a => a.opc_LnPesquisa).WithMany(b => b.opc_Viagens).HasForeignKey(c => c.LinhaId).WillCascadeOnDelete(false); // Viagens_linha
        }
    }

    // OperLinhas
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class OperLinhaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OperLinha>
    {
        public OperLinhaConfiguration()
            : this("dbo")
        {
        }

        public OperLinhaConfiguration(string schema)
        {
            ToTable("OperLinhas", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Descricao).HasColumnName(@"Descricao").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
        }
    }

    // Paises
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class PaisConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Pais>
    {
        public PaisConfiguration()
            : this("dbo")
        {
        }

        public PaisConfiguration(string schema)
        {
            ToTable("Paises", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Nome).HasColumnName(@"Nome").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Capital).HasColumnName(@"Capital").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Continente).HasColumnName(@"Continente").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
        }
    }

    // Periodos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class PeriodoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Periodo>
    {
        public PeriodoConfiguration()
            : this("dbo")
        {
        }

        public PeriodoConfiguration(string schema)
        {
            ToTable("Periodos", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Denominacao).HasColumnName(@"Denominacao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
        }
    }

    // vis_pontos
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class temp_VisPontoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<temp_VisPonto>
    {
        public temp_VisPontoConfiguration()
            : this("temp")
        {
        }

        public temp_VisPontoConfiguration(string schema)
        {
            ToTable("vis_pontos", schema);
            HasKey(x => x.Id);

            Property(x => x.EmpresaId).HasColumnName(@"EmpresaId").HasColumnType("int").IsOptional();
            Property(x => x.Empresa).HasColumnName(@"Empresa").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Prefixo).HasColumnName(@"Prefixo").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Identificação).HasColumnName(@"Identificação").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Endereço).HasColumnName(@"Endereço").HasColumnType("nvarchar").IsOptional().HasMaxLength(67);
            Property(x => x.Referência).HasColumnName(@"Referência").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Cep).HasColumnName(@"CEP").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Bairro).HasColumnName(@"Bairro").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Munícipio).HasColumnName(@"Munícipio").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Uf).HasColumnName(@"UF").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.PontoTroca63).HasColumnName(@"Ponto Troca?").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.Latitude).HasColumnName(@"Latitude").HasColumnType("decimal").IsOptional().HasPrecision(28,10);
            Property(x => x.Longitude).HasColumnName(@"Longitude").HasColumnType("decimal").IsOptional().HasPrecision(28,10);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
        }
    }

    // Ufs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class UfConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Uf>
    {
        public UfConfiguration()
            : this("dbo")
        {
        }

        public UfConfiguration(string schema)
        {
            ToTable("Ufs", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Sigla).HasColumnName(@"Sigla").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Estado).HasColumnName(@"Estado").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Capital).HasColumnName(@"Capital").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Regiao).HasColumnName(@"Regiao").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(16);
        }
    }

    // Usuarios
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public class UsuarioConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Usuario>
    {
        public UsuarioConfiguration()
            : this("dbo")
        {
        }

        public UsuarioConfiguration(string schema)
        {
            ToTable("Usuarios", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Nome).HasColumnName(@"Nome").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(64);
            Property(x => x.Login).HasColumnName(@"Login").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Senha).HasColumnName(@"Senha").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Perfil).HasColumnName(@"Perfil").HasColumnType("int").IsRequired();
            Property(x => x.Ativo).HasColumnName(@"Ativo").HasColumnType("bit").IsRequired();
            Property(x => x.Cadastro).HasColumnName(@"Cadastro").HasColumnType("datetime").IsOptional();
        }
    }

    #endregion

    #region Stored procedure return models

    #endregion

}
// </auto-generated>

