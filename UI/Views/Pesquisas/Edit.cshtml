@using UI.Properties;

@model UI.Models.PesquisaViewModel

@{
  ViewBag.Title = Resources.Update + " " + Resources.PesquisaViewModel;
}
<div class="container">
  <br />
  <br />

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <script type="text/javascript">
    $(document).ready(function () {
      $("#EmpresaId").change(function () {
        $.get("/Pesquisas/GetTerminais", { id: $(this).val() }, function (data) {
          $("#TerminalId").empty();
          $("#TerminalId").append("<option value=''></option>");
          $.each(data, function (index, row) {
            $("#TerminalId").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
          });
        });

        $.get("/Pesquisas/GetTroncos", { id: $(this).val() }, function (data) {
          $("#TroncoId").empty();
          $("#TroncoId").append("<option value=''></option>");
          $.each(data, function (index, row) {
            $("#TroncoId").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
          });
        });

        $.get("/Pesquisas/GetCorredores", { id: $(this).val() }, function (data) {
          $("#CorredorId").empty();
          $("#CorredorId").append("<option value=''></option>");
          $.each(data, function (index, row) {
            $("#CorredorId").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
          });
        });

        $.get("/Pesquisas/GetOperacoes", { id: $(this).val() }, function (data) {
          $("#OperacaoId").empty();
          $("#OperacaoId").append("<option value=''></option>");
          $.each(data, function (index, row) {
            $("#OperacaoId").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
          });
        });

        $.get("/Pesquisas/GetClasses", { id: $(this).val() }, function (data) {
          $("#Classificacao").empty();
          $("#Classificacao").append("<option value=''></option>");
          $.each(data, function (index, row) {
            $("#Classificacao").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
          });
        });
      });
    });
  </script>

  <h2>@Resources.Update</h2>

  @using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      <h4>
        @Resources.PesquisaViewModel |
        <div class="btn btn-outline-dark">
          @Html.ActionLink(Resources.LnPesquisaViewModel, "Filter", controllerName: "LnPesquisas", routeValues: new { id = Model.Id }, htmlAttributes: null)
        </div>
      </h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.Id)

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.EmpresaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("EmpresaId", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.EmpresaId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Identificacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Identificacao, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Identificacao, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Inicio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Inicio, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Inicio, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Termino, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Termino, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Termino, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.TerminalId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("TerminalId", null, string.Empty, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.TerminalId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.TroncoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("TroncoId", null, string.Empty, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.TroncoId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.CorredorId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("CorredorId", null, string.Empty, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.CorredorId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.OperacaoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("OperacaoId", null, string.Empty, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.OperacaoId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Classificacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("Classificacao", null, string.Empty, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.Classificacao, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Interna, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Interna)
            @Html.ValidationMessageFor(model => model.Interna, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Fornecedor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Fornecedor, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Fornecedor, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Contrato, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Contrato, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Uteis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Uteis)
            @Html.ValidationMessageFor(model => model.Uteis, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Sabados, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Sabados)
            @Html.ValidationMessageFor(model => model.Sabados, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Domingos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Domingos)
            @Html.ValidationMessageFor(model => model.Domingos, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Responsavel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Responsavel, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Responsavel, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="@Resources.Update" class="btn btn-default btn-sm" />
          <div class="btn btn-outline-dark btn-sm">
            @Html.ActionLink(Resources.BackToList, "Index")
          </div>
        </div>
      </div>
    </div>
  }
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
