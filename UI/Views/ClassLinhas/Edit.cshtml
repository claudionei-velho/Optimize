@using UI.Properties;

@model UI.Models.ClassLinhaViewModel

@{
  ViewBag.Title = Resources.Update + " " + Resources.ClassLinhaViewModel;
}

<div class="container">
  <br />
  <br />

  <h2>@Resources.Update</h2>

  @using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <h4>@Resources.ClassLinhaViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group  font-weight-bold">
      @Html.LabelFor(model => model.Denominacao, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-6">
        @Html.EditorFor(model => model.Denominacao, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Denominacao, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group font-weight-bold">
      @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-6">
        @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group font-weight-bold">
      <div class="col-md-offset-2 col-md-4">
        <input type="submit" value="@Resources.Update" class="btn btn-default btn-sm" />
        <div class="btn btn-outline-dark btn-sm">
          @Html.ActionLink(Resources.BackToList, "Index")
        </div>
      </div>
    </div>

  }
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
