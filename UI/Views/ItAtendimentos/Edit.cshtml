@using UI.Properties;

@model UI.Models.ItAtendimentoViewModel

@{
  ViewBag.Title = Resources.Update + " " + Resources.ItAtendimentoViewModel;
}
<div class="container">
  <br />
  <br />
  <h2>@Resources.Update</h2>

  @using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      <h4>Atendimento</h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.Id)

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.AtendimentoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("AtendimentoId", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.AtendimentoId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Sentido, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("Sentido", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.Sentido, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Percurso, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Percurso, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Percurso, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Extensao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Extensao, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Extensao, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.PavimentoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("PavimentoId", null, string.Empty, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.PavimentoId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Abrangencia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Abrangencia, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Abrangencia, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.CondicaoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("CondicaoId", null, string.Empty, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.CondicaoId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row">
        <div class="col-md-offset-2 col-md-4">
          <input type="submit" value="@Resources.Update" class="btn btn-default btn-sm" />
          <div class="btn btn-outline-dark btn-sm">
            @Html.ActionLink(Resources.BackToList, "Index")
          </div>
        </div>
      </div>
    </div>
  }
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
