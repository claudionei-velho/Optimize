@using UI.Properties;

@model UI.Models.TroncoViewModel

@{
  ViewBag.Title = Resources.Update + " " + Resources.TroncoViewModel;
}
<div class="container">
  <br />
  <br />
  <h2>@Resources.Update</h2>

  @using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      <h4>
        @Resources.TroncoViewModel |
        @Html.ActionLink(Resources.ItTroncoViewModel, "Filter", controllerName: "ItTroncos", routeValues: new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-dark" }) |
        @Html.ActionLink(Resources.PtTroncoViewModel, "Filter", controllerName: "PtTroncos", routeValues: new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-dark" }) |
        @Html.ActionLink(Resources.LnTroncoViewModel, "Filter", controllerName: "LnTroncos", routeValues: new { id = Model.Id }, htmlAttributes: new { @class = "btn btn-outline-dark" })
      </h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.Id)

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.EmpresaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("EmpresaId", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.EmpresaId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Prefixo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Prefixo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Prefixo, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Denominacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Denominacao, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Denominacao, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.ExtensaoAB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.ExtensaoAB, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.ExtensaoAB, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.ExtensaoBA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.ExtensaoBA, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.ExtensaoBA, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="@Resources.Update" class="btn btn-default btn-sm" />
          <div class="btn btn-outline-dark btn-sm">
            @Html.ActionLink(Resources.BackToList, "Index")
          </div>
        </div>
      </div>
    </div>
  }
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
