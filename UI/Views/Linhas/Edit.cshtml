@using UI.Properties;

@model UI.Models.LinhaViewModel

@{
  ViewBag.Title = Resources.Update + " " + Resources.LinhaViewModel;
}

<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
  $(document).ready(function () {
    $("#EmpresaId").change(function () {
      $.get("/Linhas/GetDominios", { id: $("#EmpresaId").val() }, function (data) {
        $("#DominioId").empty();
        $.each(data, function (index, row) {
          $("#DominioId").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
        });
      });

      $.get("/Linhas/GetOperacoes", { id: $("#EmpresaId").val() }, function (data) {
        $("#OperacaoId").empty();
        $.each(data, function (index, row) {
          $("#OperacaoId").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
        });
      });

      $.get("/Linhas/GetClasses", { id: $("#EmpresaId").val() }, function (data) {
        $("#Classificacao").empty();
        $.each(data, function (index, row) {
          $("#Classificacao").append("<option value='" + row.Key + "'>" + row.Value + "</option>");
        });
      });
    });
  });
</script>
<div class="container">
  <br />
  <br />

  <h2>@Resources.Update</h2>

  @using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      <h4>
        @Resources.LinhaViewModel |
        <div class="btn btn-outline-dark">
          @Html.ActionLink(Resources.AtendimentoViewModel, "Filter", controllerName: "Atendimentos", routeValues: new { id = Model.Id }, htmlAttributes: null)
        </div> |
        <div class="btn btn-outline-dark">
          @Html.ActionLink(Resources.HorarioViewModel, "Filter", controllerName: "Horarios", routeValues: new { id = Model.Id }, htmlAttributes: null)
        </div> |
        <div class="btn btn-outline-dark">
          @Html.ActionLink(Resources.ItinerarioViewModel, "Filter", controllerName: "Itinerarios", routeValues: new { id = Model.Id }, htmlAttributes: null)
        </div> |
        <div class="btn btn-outline-dark">
          @Html.ActionLink(Resources.PtLinhaViewModel, "Filter", controllerName: "PtLinhas", routeValues: new { id = Model.Id }, htmlAttributes: null)
        </div> |
        <div class="btn btn-outline-dark">
          @Html.ActionLink(Resources.PrLinhaViewModel, "Filter", controllerName: "PrLinhas", routeValues: new { id = Model.Id }, htmlAttributes: null)
        </div>
      </h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.Id)

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.EmpresaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("EmpresaId", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.EmpresaId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Prefixo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Prefixo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Prefixo, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Denominacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Denominacao, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Denominacao, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Viagem, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.Viagem, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.Viagem, "", new { @class = "text-danger" })
        </div>
      </div>


      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Uteis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Uteis)
            @Html.ValidationMessageFor(model => model.Uteis, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Sabados, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Sabados)
            @Html.ValidationMessageFor(model => model.Sabados, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Domingos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Domingos)
            @Html.ValidationMessageFor(model => model.Domingos, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.DominioId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("DominioId", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.DominioId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.OperacaoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("OperacaoId", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.OperacaoId, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Classificacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.DropDownList("Classificacao", null, htmlAttributes: new { @class = "form-control form-control-sm" })
          @Html.ValidationMessageFor(model => model.Classificacao, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Captacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Captacao)
            @Html.ValidationMessageFor(model => model.Captacao, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Transporte, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Transporte)
            @Html.ValidationMessageFor(model => model.Transporte, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.Distribuicao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          <div class="checkbox">
            @Html.EditorFor(model => model.Distribuicao)
            @Html.ValidationMessageFor(model => model.Distribuicao, "", new { @class = "text-danger" })
          </div>
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.ExtensaoAB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.ExtensaoAB, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.ExtensaoAB, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row font-weight-bold">
        @Html.LabelFor(model => model.ExtensaoBA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
          @Html.EditorFor(model => model.ExtensaoBA, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
          @Html.ValidationMessageFor(model => model.ExtensaoBA, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group row">
        <div class="col-md-offset-2 col-md-4">
          <input type="submit" value="@Resources.Update" class="btn btn-default btn-sm" />
          <div class="btn btn-outline-dark btn-sm">
            @Html.ActionLink(Resources.BackToList, "Index")
          </div>
        </div>
      </div>
    </div>
  }
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
